// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArtifactDetails Renders progress bar with no data 1`] = `<WithStyles(CircularProgress) />`;

exports[`ArtifactDetails Renders the Lineage Explorer tab for an artifact 1`] = `
<ArtifactDetails
  history={
    Object {
      "push": [MockFunction],
    }
  }
  location={Object {}}
  match={
    Object {
      "params": Object {
        "artifactType": "kubeflow.org/alpha/model",
        "id": "1",
      },
    }
  }
  toolbarProps={
    Object {
      "actions": Array [],
      "breadcrumbs": Array [
        Object {
          "displayName": "Artifacts",
          "href": "/artifacts",
        },
      ],
      "pageTitle": "Model 1 details",
    }
  }
  updateBanner={[MockFunction]}
  updateDialog={[MockFunction]}
  updateSnackbar={[MockFunction]}
  updateToolbar={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "actions": Array [],
            "breadcrumbs": Array [
              Object {
                "displayName": "Artifacts",
                "href": "/artifacts",
              },
            ],
            "pageTitle": "Model 1 details",
          },
        ],
        Array [
          Object {
            "pageTitle": "test model (version: v1)",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="page"
  >
    <div
      className=""
    >
      <MD2Tabs
        onSwitch={[Function]}
        selectedTab={1}
        tabs={
          Array [
            "Overview",
            "Lineage Explorer",
          ]
        }
      >
        <div
          className="tabs"
        >
          <div
            className="indicator"
          />
          <_default
            units={10}
          >
            <span
              style={
                Object {
                  "display": "inline-block",
                  "minWidth": 10,
                  "width": 10,
                }
              }
            />
          </_default>
          <WithStyles(Button)
            className="button"
            key="0"
            onClick={[Function]}
          >
            <Button
              className="button"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit-144",
                  "contained": "MuiButton-contained-134",
                  "containedPrimary": "MuiButton-containedPrimary-135",
                  "containedSecondary": "MuiButton-containedSecondary-136",
                  "disabled": "MuiButton-disabled-143",
                  "extendedFab": "MuiButton-extendedFab-141",
                  "fab": "MuiButton-fab-140",
                  "flat": "MuiButton-flat-128",
                  "flatPrimary": "MuiButton-flatPrimary-129",
                  "flatSecondary": "MuiButton-flatSecondary-130",
                  "focusVisible": "MuiButton-focusVisible-142",
                  "fullWidth": "MuiButton-fullWidth-148",
                  "label": "MuiButton-label-124",
                  "mini": "MuiButton-mini-145",
                  "outlined": "MuiButton-outlined-131",
                  "outlinedPrimary": "MuiButton-outlinedPrimary-132",
                  "outlinedSecondary": "MuiButton-outlinedSecondary-133",
                  "raised": "MuiButton-raised-137",
                  "raisedPrimary": "MuiButton-raisedPrimary-138",
                  "raisedSecondary": "MuiButton-raisedSecondary-139",
                  "root": "MuiButton-root-123",
                  "sizeLarge": "MuiButton-sizeLarge-147",
                  "sizeSmall": "MuiButton-sizeSmall-146",
                  "text": "MuiButton-text-125",
                  "textPrimary": "MuiButton-textPrimary-126",
                  "textSecondary": "MuiButton-textSecondary-127",
                }
              }
              color="default"
              component="button"
              disableFocusRipple={false}
              disabled={false}
              fullWidth={false}
              mini={false}
              onClick={[Function]}
              size="medium"
              type="button"
              variant="text"
            >
              <WithStyles(ButtonBase)
                className="MuiButton-root-123 MuiButton-text-125 MuiButton-flat-128 button"
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="MuiButton-focusVisible-142"
                onClick={[Function]}
                type="button"
              >
                <ButtonBase
                  centerRipple={false}
                  className="MuiButton-root-123 MuiButton-text-125 MuiButton-flat-128 button"
                  classes={
                    Object {
                      "disabled": "MuiButtonBase-disabled-150",
                      "focusVisible": "MuiButtonBase-focusVisible-151",
                      "root": "MuiButtonBase-root-149",
                    }
                  }
                  component="button"
                  disableRipple={false}
                  disableTouchRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-142"
                  onClick={[Function]}
                  tabIndex="0"
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root-149 MuiButton-root-123 MuiButton-text-125 MuiButton-flat-128 button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onContextMenu={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex="0"
                    type="button"
                  >
                    <span
                      className="MuiButton-label-124"
                    >
                      <span>
                        Overview
                      </span>
                    </span>
                    <NoSsr
                      defer={false}
                      fallback={null}
                    >
                      <WithStyles(TouchRipple)
                        center={false}
                        innerRef={[Function]}
                      >
                        <TouchRipple
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child-156",
                              "childLeaving": "MuiTouchRipple-childLeaving-157",
                              "childPulsate": "MuiTouchRipple-childPulsate-158",
                              "ripple": "MuiTouchRipple-ripple-153",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-155",
                              "rippleVisible": "MuiTouchRipple-rippleVisible-154",
                              "root": "MuiTouchRipple-root-152",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="MuiTouchRipple-root-152"
                            component="span"
                            enter={true}
                            exit={true}
                          >
                            <span
                              className="MuiTouchRipple-root-152"
                            />
                          </TransitionGroup>
                        </TouchRipple>
                      </WithStyles(TouchRipple)>
                    </NoSsr>
                  </button>
                </ButtonBase>
              </WithStyles(ButtonBase)>
            </Button>
          </WithStyles(Button)>
          <WithStyles(Button)
            className="button active"
            key="1"
            onClick={[Function]}
          >
            <Button
              className="button active"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit-144",
                  "contained": "MuiButton-contained-134",
                  "containedPrimary": "MuiButton-containedPrimary-135",
                  "containedSecondary": "MuiButton-containedSecondary-136",
                  "disabled": "MuiButton-disabled-143",
                  "extendedFab": "MuiButton-extendedFab-141",
                  "fab": "MuiButton-fab-140",
                  "flat": "MuiButton-flat-128",
                  "flatPrimary": "MuiButton-flatPrimary-129",
                  "flatSecondary": "MuiButton-flatSecondary-130",
                  "focusVisible": "MuiButton-focusVisible-142",
                  "fullWidth": "MuiButton-fullWidth-148",
                  "label": "MuiButton-label-124",
                  "mini": "MuiButton-mini-145",
                  "outlined": "MuiButton-outlined-131",
                  "outlinedPrimary": "MuiButton-outlinedPrimary-132",
                  "outlinedSecondary": "MuiButton-outlinedSecondary-133",
                  "raised": "MuiButton-raised-137",
                  "raisedPrimary": "MuiButton-raisedPrimary-138",
                  "raisedSecondary": "MuiButton-raisedSecondary-139",
                  "root": "MuiButton-root-123",
                  "sizeLarge": "MuiButton-sizeLarge-147",
                  "sizeSmall": "MuiButton-sizeSmall-146",
                  "text": "MuiButton-text-125",
                  "textPrimary": "MuiButton-textPrimary-126",
                  "textSecondary": "MuiButton-textSecondary-127",
                }
              }
              color="default"
              component="button"
              disableFocusRipple={false}
              disabled={false}
              fullWidth={false}
              mini={false}
              onClick={[Function]}
              size="medium"
              type="button"
              variant="text"
            >
              <WithStyles(ButtonBase)
                className="MuiButton-root-123 MuiButton-text-125 MuiButton-flat-128 button active"
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="MuiButton-focusVisible-142"
                onClick={[Function]}
                type="button"
              >
                <ButtonBase
                  centerRipple={false}
                  className="MuiButton-root-123 MuiButton-text-125 MuiButton-flat-128 button active"
                  classes={
                    Object {
                      "disabled": "MuiButtonBase-disabled-150",
                      "focusVisible": "MuiButtonBase-focusVisible-151",
                      "root": "MuiButtonBase-root-149",
                    }
                  }
                  component="button"
                  disableRipple={false}
                  disableTouchRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-142"
                  onClick={[Function]}
                  tabIndex="0"
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root-149 MuiButton-root-123 MuiButton-text-125 MuiButton-flat-128 button active"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onContextMenu={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex="0"
                    type="button"
                  >
                    <span
                      className="MuiButton-label-124"
                    >
                      <span>
                        Lineage Explorer
                      </span>
                    </span>
                    <NoSsr
                      defer={false}
                      fallback={null}
                    >
                      <WithStyles(TouchRipple)
                        center={false}
                        innerRef={[Function]}
                      >
                        <TouchRipple
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child-156",
                              "childLeaving": "MuiTouchRipple-childLeaving-157",
                              "childPulsate": "MuiTouchRipple-childPulsate-158",
                              "ripple": "MuiTouchRipple-ripple-153",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-155",
                              "rippleVisible": "MuiTouchRipple-rippleVisible-154",
                              "root": "MuiTouchRipple-root-152",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="MuiTouchRipple-root-152"
                            component="span"
                            enter={true}
                            exit={true}
                          >
                            <span
                              className="MuiTouchRipple-root-152"
                            />
                          </TransitionGroup>
                        </TouchRipple>
                      </WithStyles(TouchRipple)>
                    </NoSsr>
                  </button>
                </ButtonBase>
              </WithStyles(ButtonBase)>
            </Button>
          </WithStyles(Button)>
        </div>
      </MD2Tabs>
    </div>
    <LineageView>
      <div
        className="page LineageExplorer"
        style={
          Object {
            "background": "#f3f2f4",
            "flexFlow": "row",
            "overflow": "auto",
            "position": "relative",
            "width": "100%",
            "zIndex": 0,
          }
        }
      >
        <LineageCardColumn
          cards={
            Array [
              Object {
                "elements": Array [
                  Object {
                    "desc": "This is really cool",
                    "next": true,
                    "title": "Artifact 1",
                  },
                  Object {
                    "desc": "This is also kinda cool",
                    "next": true,
                    "title": "Artifact 2",
                  },
                ],
                "title": "Notebook",
              },
              Object {
                "elements": Array [
                  Object {
                    "next": true,
                    "prev": true,
                    "title": "Artifact w/o desc",
                  },
                  Object {
                    "desc": "Lorem ipsum",
                    "next": true,
                    "title": "Artifact that should have overflowing text",
                  },
                ],
                "title": "Datasets",
              },
            ]
          }
          title="Input Artifact"
          type="artifact"
        >
          <div
            className="mainColumn artifact"
          >
            <div
              className="columnHeader"
            >
              <h2>
                Input Artifact
              </h2>
            </div>
            <div
              className="columnBody"
            >
              <EdgeCanvas
                cardArray={
                  Array [
                    2,
                    2,
                  ]
                }
                reverseEdges={false}
                type="artifact"
              >
                <div
                  className="edgeCanvas kWKfgJ"
                  style={
                    Object {
                      "width": "200px",
                    }
                  }
                >
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 0,
                        },
                        Object {
                          "x": 30,
                          "y": 0,
                        },
                        Object {
                          "x": 170,
                          "y": 0,
                        },
                        Object {
                          "x": 200,
                          "y": 0,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="0-0"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={1}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 1"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 1"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 0,
                        },
                        Object {
                          "x": 30,
                          "y": 0,
                        },
                        Object {
                          "x": 170,
                          "y": 67,
                        },
                        Object {
                          "x": 200,
                          "y": 67,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="0-1"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={68}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 68"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 68"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 67,
                                },
                                Object {
                                  "x": 200,
                                  "y": 67,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 67,
                                },
                                Object {
                                  "x": 200,
                                  "y": 67,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 68  C
      0
      68
      0
      68
      5
      68
      C
      10
      68
      20
      68
      48.33
      57.15
      C
      76.67
      46.3
      123.33
      24.61
      151.67
      13.76
     C
      180
      2.91
      190
      2.91
      195
      2.91
    L 200 2.91 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 68  C
      0
      68
      0
      68
      5
      68
      C
      10
      68
      20
      68
      48.33
      57.15
      C
      76.67
      46.3
      123.33
      24.61
      151.67
      13.76
     C
      180
      2.91
      190
      2.91
      195
      2.91
    L 200 2.91 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 67,
                                },
                                Object {
                                  "x": 200,
                                  "y": 67,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 67,
                                },
                                Object {
                                  "x": 200,
                                  "y": 67,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 67,
                                },
                                Object {
                                  "x": 200,
                                  "y": 67,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 0,
                        },
                        Object {
                          "x": 30,
                          "y": 0,
                        },
                        Object {
                          "x": 170,
                          "y": 201,
                        },
                        Object {
                          "x": 200,
                          "y": 201,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="1-0"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={202}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 202"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 202"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 201,
                                },
                                Object {
                                  "x": 200,
                                  "y": 201,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 201,
                                },
                                Object {
                                  "x": 200,
                                  "y": 201,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 202  C
      0
      202
      0
      202
      5
      202
      C
      10
      202
      20
      202
      48.33
      168.99
      C
      76.67
      135.98
      123.33
      69.96
      151.67
      36.95
     C
      180
      3.94
      190
      3.94
      195
      3.94
    L 200 3.94 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 202  C
      0
      202
      0
      202
      5
      202
      C
      10
      202
      20
      202
      48.33
      168.99
      C
      76.67
      135.98
      123.33
      69.96
      151.67
      36.95
     C
      180
      3.94
      190
      3.94
      195
      3.94
    L 200 3.94 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 201,
                                },
                                Object {
                                  "x": 200,
                                  "y": 201,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 201,
                                },
                                Object {
                                  "x": 200,
                                  "y": 201,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 201,
                                },
                                Object {
                                  "x": 200,
                                  "y": 201,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 0,
                        },
                        Object {
                          "x": 30,
                          "y": 0,
                        },
                        Object {
                          "x": 170,
                          "y": 268,
                        },
                        Object {
                          "x": 200,
                          "y": 268,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="1-1"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={269}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 269"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 269"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 268,
                                },
                                Object {
                                  "x": 200,
                                  "y": 268,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 268,
                                },
                                Object {
                                  "x": 200,
                                  "y": 268,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 269  C
      0
      269
      0
      269
      5
      269
      C
      10
      269
      20
      269
      48.33
      224.5
      C
      76.67
      180
      123.33
      91
      151.67
      46.49
     C
      180
      1.99
      190
      1.99
      195
      1.99
    L 200 1.99 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 269  C
      0
      269
      0
      269
      5
      269
      C
      10
      269
      20
      269
      48.33
      224.5
      C
      76.67
      180
      123.33
      91
      151.67
      46.49
     C
      180
      1.99
      190
      1.99
      195
      1.99
    L 200 1.99 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 268,
                                },
                                Object {
                                  "x": 200,
                                  "y": 268,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 268,
                                },
                                Object {
                                  "x": 200,
                                  "y": 268,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 268,
                                },
                                Object {
                                  "x": 200,
                                  "y": 268,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                </div>
              </EdgeCanvas>
              <LineageCard
                addSpacer={false}
                isTarget={false}
                rows={
                  Array [
                    Object {
                      "desc": "This is really cool",
                      "next": true,
                      "title": "Artifact 1",
                    },
                    Object {
                      "desc": "This is also kinda cool",
                      "next": true,
                      "title": "Artifact 2",
                    },
                  ]
                }
                title="Notebook"
                type="artifact"
              >
                <div
                  className="cardContainer artifact"
                >
                  <div
                    className="cardTitle"
                  >
                    <h3>
                      Notebook
                    </h3>
                  </div>
                  <div
                    className="cardBody"
                  >
                    <LineageCardRow
                      description="This is really cool"
                      hideRadio={false}
                      isLastRow={false}
                      key="0"
                      leftAffordance={false}
                      rightAffordance={true}
                      title="Artifact 1"
                    >
                      <div
                        className="cardRow "
                      >
                        <div>
                          <input
                            className="form-radio"
                            name=""
                            type="radio"
                            value=""
                          />
                        </div>
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Artifact 1
                          </p>
                          <p
                            className="rowDesc"
                          >
                            This is really cool
                          </p>
                        </footer>
                        <div
                          className="edgeRight"
                        />
                      </div>
                    </LineageCardRow>
                    <LineageCardRow
                      description="This is also kinda cool"
                      hideRadio={false}
                      isLastRow={true}
                      key="1"
                      leftAffordance={false}
                      rightAffordance={true}
                      title="Artifact 2"
                    >
                      <div
                        className="cardRow lastRow"
                      >
                        <div>
                          <input
                            className="form-radio"
                            name=""
                            type="radio"
                            value=""
                          />
                        </div>
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Artifact 2
                          </p>
                          <p
                            className="rowDesc"
                          >
                            This is also kinda cool
                          </p>
                        </footer>
                        <div
                          className="edgeRight"
                        />
                      </div>
                    </LineageCardRow>
                  </div>
                </div>
              </LineageCard>
              <LineageCard
                addSpacer={true}
                isTarget={false}
                rows={
                  Array [
                    Object {
                      "next": true,
                      "prev": true,
                      "title": "Artifact w/o desc",
                    },
                    Object {
                      "desc": "Lorem ipsum",
                      "next": true,
                      "title": "Artifact that should have overflowing text",
                    },
                  ]
                }
                title="Datasets"
                type="artifact"
              >
                <div
                  className="cardContainer artifact addSpacer"
                >
                  <div
                    className="cardTitle"
                  >
                    <h3>
                      Datasets
                    </h3>
                  </div>
                  <div
                    className="cardBody"
                  >
                    <LineageCardRow
                      hideRadio={false}
                      isLastRow={false}
                      key="0"
                      leftAffordance={true}
                      rightAffordance={true}
                      title="Artifact w/o desc"
                    >
                      <div
                        className="cardRow "
                      >
                        <div>
                          <input
                            className="form-radio"
                            name=""
                            type="radio"
                            value=""
                          />
                        </div>
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Artifact w/o desc
                          </p>
                          <p
                            className="rowDesc"
                          />
                        </footer>
                        <div
                          className="edgeLeft"
                        />
                        <div
                          className="edgeRight"
                        />
                      </div>
                    </LineageCardRow>
                    <LineageCardRow
                      description="Lorem ipsum"
                      hideRadio={false}
                      isLastRow={true}
                      key="1"
                      leftAffordance={false}
                      rightAffordance={true}
                      title="Artifact that should have overflowing text"
                    >
                      <div
                        className="cardRow lastRow"
                      >
                        <div>
                          <input
                            className="form-radio"
                            name=""
                            type="radio"
                            value=""
                          />
                        </div>
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Artifact that should have overflowing text
                          </p>
                          <p
                            className="rowDesc"
                          >
                            Lorem ipsum
                          </p>
                        </footer>
                        <div
                          className="edgeRight"
                        />
                      </div>
                    </LineageCardRow>
                  </div>
                </div>
              </LineageCard>
            </div>
          </div>
        </LineageCardColumn>
        <LineageCardColumn
          cards={
            Array [
              Object {
                "elements": Array [
                  Object {
                    "desc": "13,201 Examples",
                    "next": true,
                    "prev": true,
                    "title": "Some Process",
                  },
                ],
                "title": "Execution",
              },
            ]
          }
          title=""
          type="execution"
        >
          <div
            className="mainColumn execution"
          >
            <div
              className="columnHeader"
            >
              <h2 />
            </div>
            <div
              className="columnBody"
            >
              <EdgeCanvas
                cardArray={
                  Array [
                    1,
                  ]
                }
                reverseEdges={false}
                type="execution"
              >
                <div
                  className="edgeCanvas kWKfgJ"
                  style={
                    Object {
                      "width": "200px",
                    }
                  }
                >
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 0,
                        },
                        Object {
                          "x": 30,
                          "y": 0,
                        },
                        Object {
                          "x": 170,
                          "y": 0,
                        },
                        Object {
                          "x": 200,
                          "y": 0,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="0-0"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={1}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 1"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 1"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                </div>
              </EdgeCanvas>
              <LineageCard
                addSpacer={false}
                isTarget={false}
                rows={
                  Array [
                    Object {
                      "desc": "13,201 Examples",
                      "next": true,
                      "prev": true,
                      "title": "Some Process",
                    },
                  ]
                }
                title="Execution"
                type="execution"
              >
                <div
                  className="cardContainer execution"
                >
                  <div
                    className="cardTitle"
                  >
                    <h3>
                      Execution
                    </h3>
                  </div>
                  <div
                    className="cardBody"
                  >
                    <LineageCardRow
                      description="13,201 Examples"
                      hideRadio={true}
                      isLastRow={true}
                      key="0"
                      leftAffordance={true}
                      rightAffordance={true}
                      title="Some Process"
                    >
                      <div
                        className="cardRow lastRow"
                      >
                        <div
                          className="noRadio"
                        />
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Some Process
                          </p>
                          <p
                            className="rowDesc"
                          >
                            13,201 Examples
                          </p>
                        </footer>
                        <div
                          className="edgeLeft"
                        />
                        <div
                          className="edgeRight"
                        />
                      </div>
                    </LineageCardRow>
                  </div>
                </div>
              </LineageCard>
            </div>
          </div>
        </LineageCardColumn>
        <LineageCardColumn
          cards={
            Array [
              Object {
                "elements": Array [
                  Object {
                    "desc": "13,201 Examples",
                    "next": true,
                    "prev": true,
                    "title": "Some Process",
                  },
                ],
                "title": "Target",
              },
            ]
          }
          title="Target"
          type="artifact"
        >
          <div
            className="mainColumn artifact"
          >
            <div
              className="columnHeader"
            >
              <h2>
                Target
              </h2>
            </div>
            <div
              className="columnBody"
            >
              <EdgeCanvas
                cardArray={
                  Array [
                    1,
                  ]
                }
                reverseEdges={false}
                type="artifact"
              >
                <div
                  className="edgeCanvas kWKfgJ"
                  style={
                    Object {
                      "width": "200px",
                    }
                  }
                >
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 0,
                        },
                        Object {
                          "x": 30,
                          "y": 0,
                        },
                        Object {
                          "x": 170,
                          "y": 0,
                        },
                        Object {
                          "x": 200,
                          "y": 0,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="0-0"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={1}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 1"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 1"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                </div>
              </EdgeCanvas>
              <LineageCard
                addSpacer={false}
                isTarget={true}
                rows={
                  Array [
                    Object {
                      "desc": "13,201 Examples",
                      "next": true,
                      "prev": true,
                      "title": "Some Process",
                    },
                  ]
                }
                title="Target"
                type="artifact"
              >
                <div
                  className="cardContainer artifact target"
                >
                  <div
                    className="cardTitle"
                  >
                    <h3>
                      Target
                    </h3>
                  </div>
                  <div
                    className="cardBody"
                  >
                    <LineageCardRow
                      description="13,201 Examples"
                      hideRadio={true}
                      isLastRow={true}
                      key="0"
                      leftAffordance={true}
                      rightAffordance={true}
                      title="Some Process"
                    >
                      <div
                        className="cardRow lastRow"
                      >
                        <div
                          className="noRadio"
                        />
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Some Process
                          </p>
                          <p
                            className="rowDesc"
                          >
                            13,201 Examples
                          </p>
                        </footer>
                        <div
                          className="edgeLeft"
                        />
                        <div
                          className="edgeRight"
                        />
                      </div>
                    </LineageCardRow>
                  </div>
                </div>
              </LineageCard>
            </div>
          </div>
        </LineageCardColumn>
        <LineageCardColumn
          cards={
            Array [
              Object {
                "elements": Array [
                  Object {
                    "desc": "13,201 Examples",
                    "next": true,
                    "prev": true,
                    "title": "Some Process",
                  },
                ],
                "title": "Execution",
              },
            ]
          }
          title=""
          type="execution"
        >
          <div
            className="mainColumn execution"
          >
            <div
              className="columnHeader"
            >
              <h2 />
            </div>
            <div
              className="columnBody"
            >
              <EdgeCanvas
                cardArray={
                  Array [
                    1,
                  ]
                }
                reverseEdges={false}
                type="execution"
              >
                <div
                  className="edgeCanvas kWKfgJ"
                  style={
                    Object {
                      "width": "200px",
                    }
                  }
                >
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 0,
                        },
                        Object {
                          "x": 30,
                          "y": 0,
                        },
                        Object {
                          "x": 170,
                          "y": 0,
                        },
                        Object {
                          "x": 200,
                          "y": 0,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="0-0"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={1}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 1"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 1"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                </div>
              </EdgeCanvas>
              <LineageCard
                addSpacer={false}
                isTarget={false}
                rows={
                  Array [
                    Object {
                      "desc": "13,201 Examples",
                      "next": true,
                      "prev": true,
                      "title": "Some Process",
                    },
                  ]
                }
                title="Execution"
                type="execution"
              >
                <div
                  className="cardContainer execution"
                >
                  <div
                    className="cardTitle"
                  >
                    <h3>
                      Execution
                    </h3>
                  </div>
                  <div
                    className="cardBody"
                  >
                    <LineageCardRow
                      description="13,201 Examples"
                      hideRadio={true}
                      isLastRow={true}
                      key="0"
                      leftAffordance={true}
                      rightAffordance={true}
                      title="Some Process"
                    >
                      <div
                        className="cardRow lastRow"
                      >
                        <div
                          className="noRadio"
                        />
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Some Process
                          </p>
                          <p
                            className="rowDesc"
                          >
                            13,201 Examples
                          </p>
                        </footer>
                        <div
                          className="edgeLeft"
                        />
                        <div
                          className="edgeRight"
                        />
                      </div>
                    </LineageCardRow>
                  </div>
                </div>
              </LineageCard>
            </div>
          </div>
        </LineageCardColumn>
        <LineageCardColumn
          cards={
            Array [
              Object {
                "elements": Array [
                  Object {
                    "desc": "Maybe does something",
                    "prev": true,
                    "title": "Lol",
                  },
                  Object {
                    "desc": "How fast should I descent the gradient",
                    "next": true,
                    "prev": true,
                    "title": "Skip factor",
                  },
                ],
                "title": "Hyperparameters",
              },
              Object {
                "elements": Array [
                  Object {
                    "desc": "http://foo.bar/x34s",
                    "next": true,
                    "prev": true,
                    "title": "AWS Webserver",
                  },
                  Object {
                    "desc": "Hosted via GCP",
                    "prev": true,
                    "title": "Product API",
                  },
                ],
                "title": "Deployments",
              },
            ]
          }
          reverseBindings={true}
          title="Output Artifact"
          type="artifact"
        >
          <div
            className="mainColumn artifact"
          >
            <div
              className="columnHeader"
            >
              <h2>
                Output Artifact
              </h2>
            </div>
            <div
              className="columnBody"
            >
              <EdgeCanvas
                cardArray={
                  Array [
                    2,
                    2,
                  ]
                }
                reverseEdges={true}
                type="artifact"
              >
                <div
                  className="edgeCanvas kWKfgJ reverse"
                  style={
                    Object {
                      "width": "200px",
                    }
                  }
                >
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 0,
                        },
                        Object {
                          "x": 30,
                          "y": 0,
                        },
                        Object {
                          "x": 170,
                          "y": 0,
                        },
                        Object {
                          "x": 200,
                          "y": 0,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="0-0"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={1}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 1"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 1"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 1  C
      0
      1
      0
      1
      5
      1
      C
      10
      1
      20
      1
      48.33
      1
      C
      76.67
      1
      123.33
      1
      151.67
      1
     C
      180
      1
      190
      1
      195
      1
    L 200 1 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 0,
                                },
                                Object {
                                  "x": 30,
                                  "y": 0,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={5}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 67,
                        },
                        Object {
                          "x": 30,
                          "y": 67,
                        },
                        Object {
                          "x": 170,
                          "y": 0,
                        },
                        Object {
                          "x": 200,
                          "y": 0,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="0-1"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={68}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 68"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 68"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 67,
                                },
                                Object {
                                  "x": 30,
                                  "y": 67,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 67,
                                },
                                Object {
                                  "x": 30,
                                  "y": 67,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 2.91  C
      0
      2.91
      0
      2.91
      5
      2.91
      C
      10
      2.91
      20
      2.91
      48.33
      13.76
      C
      76.67
      24.61
      123.33
      46.3
      151.67
      57.15
     C
      180
      68
      190
      68
      195
      68
    L 200 68 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 2.91  C
      0
      2.91
      0
      2.91
      5
      2.91
      C
      10
      2.91
      20
      2.91
      48.33
      13.76
      C
      76.67
      24.61
      123.33
      46.3
      151.67
      57.15
     C
      180
      68
      190
      68
      195
      68
    L 200 68 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 67,
                                },
                                Object {
                                  "x": 30,
                                  "y": 67,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 67,
                                },
                                Object {
                                  "x": 30,
                                  "y": 67,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 67,
                                },
                                Object {
                                  "x": 30,
                                  "y": 67,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={70}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 201,
                        },
                        Object {
                          "x": 30,
                          "y": 201,
                        },
                        Object {
                          "x": 170,
                          "y": 0,
                        },
                        Object {
                          "x": 200,
                          "y": 0,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="1-0"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={202}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 202"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 202"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 201,
                                },
                                Object {
                                  "x": 30,
                                  "y": 201,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 201,
                                },
                                Object {
                                  "x": 30,
                                  "y": 201,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 3.94  C
      0
      3.94
      0
      3.94
      5
      3.94
      C
      10
      3.94
      20
      3.94
      48.33
      36.95
      C
      76.67
      69.96
      123.33
      135.98
      151.67
      168.99
     C
      180
      202
      190
      202
      195
      202
    L 200 202 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 3.94  C
      0
      3.94
      0
      3.94
      5
      3.94
      C
      10
      3.94
      20
      3.94
      48.33
      36.95
      C
      76.67
      69.96
      123.33
      135.98
      151.67
      168.99
     C
      180
      202
      190
      202
      195
      202
    L 200 202 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 201,
                                },
                                Object {
                                  "x": 30,
                                  "y": 201,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 201,
                                },
                                Object {
                                  "x": 30,
                                  "y": 201,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 201,
                                },
                                Object {
                                  "x": 30,
                                  "y": 201,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={205}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                  <LineChart
                    areaVisible={false}
                    axisColor="#34495e"
                    axisOpacity={0.3}
                    axisVisible={false}
                    axisWidth={1}
                    data={
                      Array [
                        Object {
                          "x": 0,
                          "y": 268,
                        },
                        Object {
                          "x": 30,
                          "y": 268,
                        },
                        Object {
                          "x": 170,
                          "y": 0,
                        },
                        Object {
                          "x": 200,
                          "y": 0,
                        },
                      ]
                    }
                    getX={[Function]}
                    getY={[Function]}
                    gridColor="#34495e"
                    gridOpacity={0.2}
                    gridVisible={false}
                    gridWidth={1}
                    key="1-1"
                    labelsCharacterWidth={10}
                    labelsColor="#bdc3c7"
                    labelsCountY={5}
                    labelsFormatX={[Function]}
                    labelsFormatY={[Function]}
                    labelsHeightX={12}
                    labelsOffsetX={15}
                    labelsOffsetY={15}
                    labelsStepX={2}
                    labelsVisible={false}
                    pathColor="#BDC1C6"
                    pathOpacity={1}
                    pathSmoothing={0}
                    pathVisible={true}
                    pathWidth={1}
                    pointsColor="#fff"
                    pointsIsHoverOnZone={false}
                    pointsOnHover={[Function]}
                    pointsRadius={4}
                    pointsStrokeColor="#34495e"
                    pointsStrokeWidth={2}
                    pointsVisible={false}
                    viewBoxHeight={269}
                    viewBoxWidth={200}
                  >
                    <styled.svg
                      viewBox="0 0 200 269"
                    >
                      <svg
                        className="sc-gzVnrw kWKfgJ"
                        viewBox="0 0 200 269"
                      >
                        <g
                          transform="translate(0, 0)"
                        >
                          <Grid
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 268,
                                },
                                Object {
                                  "x": 30,
                                  "y": 268,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Path
                            areaColor="#34495e"
                            areaOpacity={0.5}
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 268,
                                },
                                Object {
                                  "x": 30,
                                  "y": 268,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          >
                            <g>
                              <styled.path
                                color="#BDC1C6"
                                d="M 0 1.99  C
      0
      1.99
      0
      1.99
      5
      1.99
      C
      10
      1.99
      20
      1.99
      48.33
      46.49
      C
      76.67
      91
      123.33
      180
      151.67
      224.5
     C
      180
      269
      190
      269
      195
      269
    L 200 269 "
                                opacity={1}
                                width={1}
                              >
                                <path
                                  className="sc-htpNat emMQTt"
                                  color="#BDC1C6"
                                  d="M 0 1.99  C
      0
      1.99
      0
      1.99
      5
      1.99
      C
      10
      1.99
      20
      1.99
      48.33
      46.49
      C
      76.67
      91
      123.33
      180
      151.67
      224.5
     C
      180
      269
      190
      269
      195
      269
    L 200 269 "
                                  opacity={1}
                                  width={1}
                                />
                              </styled.path>
                            </g>
                          </Path>
                          <Axis
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 268,
                                },
                                Object {
                                  "x": 30,
                                  "y": 268,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Points
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 268,
                                },
                                Object {
                                  "x": 30,
                                  "y": 268,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                          <Labels
                            areaVisible={false}
                            axisColor="#34495e"
                            axisOpacity={0.3}
                            axisVisible={false}
                            axisWidth={1}
                            data={
                              Array [
                                Object {
                                  "x": 0,
                                  "y": 268,
                                },
                                Object {
                                  "x": 30,
                                  "y": 268,
                                },
                                Object {
                                  "x": 170,
                                  "y": 0,
                                },
                                Object {
                                  "x": 200,
                                  "y": 0,
                                },
                              ]
                            }
                            getX={[Function]}
                            getY={[Function]}
                            gridColor="#34495e"
                            gridOpacity={0.2}
                            gridVisible={false}
                            gridWidth={1}
                            labelsCharacterWidth={10}
                            labelsColor="#bdc3c7"
                            labelsCountY={5}
                            labelsFormatX={[Function]}
                            labelsFormatY={[Function]}
                            labelsHeightX={12}
                            labelsOffsetX={15}
                            labelsOffsetY={15}
                            labelsStepX={2}
                            labelsVisible={false}
                            maxX={200}
                            maxY={270}
                            minX={0}
                            minY={0}
                            pathColor="#BDC1C6"
                            pathOpacity={1}
                            pathSmoothing={0}
                            pathVisible={true}
                            pathWidth={1}
                            pointsColor="#fff"
                            pointsIsHoverOnZone={false}
                            pointsOnHover={[Function]}
                            pointsRadius={4}
                            pointsStrokeColor="#34495e"
                            pointsStrokeWidth={2}
                            pointsVisible={false}
                          />
                        </g>
                      </svg>
                    </styled.svg>
                  </LineChart>
                </div>
              </EdgeCanvas>
              <LineageCard
                addSpacer={false}
                isTarget={false}
                rows={
                  Array [
                    Object {
                      "desc": "Maybe does something",
                      "prev": true,
                      "title": "Lol",
                    },
                    Object {
                      "desc": "How fast should I descent the gradient",
                      "next": true,
                      "prev": true,
                      "title": "Skip factor",
                    },
                  ]
                }
                title="Hyperparameters"
                type="artifact"
              >
                <div
                  className="cardContainer artifact"
                >
                  <div
                    className="cardTitle"
                  >
                    <h3>
                      Hyperparameters
                    </h3>
                  </div>
                  <div
                    className="cardBody"
                  >
                    <LineageCardRow
                      description="Maybe does something"
                      hideRadio={false}
                      isLastRow={false}
                      key="0"
                      leftAffordance={true}
                      rightAffordance={false}
                      title="Lol"
                    >
                      <div
                        className="cardRow "
                      >
                        <div>
                          <input
                            className="form-radio"
                            name=""
                            type="radio"
                            value=""
                          />
                        </div>
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Lol
                          </p>
                          <p
                            className="rowDesc"
                          >
                            Maybe does something
                          </p>
                        </footer>
                        <div
                          className="edgeLeft"
                        />
                      </div>
                    </LineageCardRow>
                    <LineageCardRow
                      description="How fast should I descent the gradient"
                      hideRadio={false}
                      isLastRow={true}
                      key="1"
                      leftAffordance={true}
                      rightAffordance={true}
                      title="Skip factor"
                    >
                      <div
                        className="cardRow lastRow"
                      >
                        <div>
                          <input
                            className="form-radio"
                            name=""
                            type="radio"
                            value=""
                          />
                        </div>
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Skip factor
                          </p>
                          <p
                            className="rowDesc"
                          >
                            How fast should I descent the gradient
                          </p>
                        </footer>
                        <div
                          className="edgeLeft"
                        />
                        <div
                          className="edgeRight"
                        />
                      </div>
                    </LineageCardRow>
                  </div>
                </div>
              </LineageCard>
              <LineageCard
                addSpacer={true}
                isTarget={false}
                rows={
                  Array [
                    Object {
                      "desc": "http://foo.bar/x34s",
                      "next": true,
                      "prev": true,
                      "title": "AWS Webserver",
                    },
                    Object {
                      "desc": "Hosted via GCP",
                      "prev": true,
                      "title": "Product API",
                    },
                  ]
                }
                title="Deployments"
                type="artifact"
              >
                <div
                  className="cardContainer artifact addSpacer"
                >
                  <div
                    className="cardTitle"
                  >
                    <h3>
                      Deployments
                    </h3>
                  </div>
                  <div
                    className="cardBody"
                  >
                    <LineageCardRow
                      description="http://foo.bar/x34s"
                      hideRadio={false}
                      isLastRow={false}
                      key="0"
                      leftAffordance={true}
                      rightAffordance={true}
                      title="AWS Webserver"
                    >
                      <div
                        className="cardRow "
                      >
                        <div>
                          <input
                            className="form-radio"
                            name=""
                            type="radio"
                            value=""
                          />
                        </div>
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            AWS Webserver
                          </p>
                          <p
                            className="rowDesc"
                          >
                            http://foo.bar/x34s
                          </p>
                        </footer>
                        <div
                          className="edgeLeft"
                        />
                        <div
                          className="edgeRight"
                        />
                      </div>
                    </LineageCardRow>
                    <LineageCardRow
                      description="Hosted via GCP"
                      hideRadio={false}
                      isLastRow={true}
                      key="1"
                      leftAffordance={true}
                      rightAffordance={false}
                      title="Product API"
                    >
                      <div
                        className="cardRow lastRow"
                      >
                        <div>
                          <input
                            className="form-radio"
                            name=""
                            type="radio"
                            value=""
                          />
                        </div>
                        <footer>
                          <p
                            className="rowTitle"
                          >
                            Product API
                          </p>
                          <p
                            className="rowDesc"
                          >
                            Hosted via GCP
                          </p>
                        </footer>
                        <div
                          className="edgeLeft"
                        />
                      </div>
                    </LineageCardRow>
                  </div>
                </div>
              </LineageCard>
            </div>
          </div>
        </LineageCardColumn>
      </div>
    </LineageView>
  </div>
</ArtifactDetails>
`;

exports[`ArtifactDetails Renders the Overview tab for an artifact 1`] = `
<ArtifactDetails
  history={
    Object {
      "push": [MockFunction],
    }
  }
  location={Object {}}
  match={
    Object {
      "params": Object {
        "artifactType": "kubeflow.org/alpha/model",
        "id": "1",
      },
    }
  }
  toolbarProps={
    Object {
      "actions": Array [],
      "breadcrumbs": Array [
        Object {
          "displayName": "Artifacts",
          "href": "/artifacts",
        },
      ],
      "pageTitle": "Model 1 details",
    }
  }
  updateBanner={[MockFunction]}
  updateDialog={[MockFunction]}
  updateSnackbar={[MockFunction]}
  updateToolbar={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "actions": Array [],
            "breadcrumbs": Array [
              Object {
                "displayName": "Artifacts",
                "href": "/artifacts",
              },
            ],
            "pageTitle": "Model 1 details",
          },
        ],
        Array [
          Object {
            "pageTitle": "test model (version: v1)",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="page"
  >
    <div
      className=""
    >
      <MD2Tabs
        onSwitch={[Function]}
        selectedTab={0}
        tabs={
          Array [
            "Overview",
            "Lineage Explorer",
          ]
        }
      >
        <div
          className="tabs"
        >
          <div
            className="indicator"
          />
          <_default
            units={10}
          >
            <span
              style={
                Object {
                  "display": "inline-block",
                  "minWidth": 10,
                  "width": 10,
                }
              }
            />
          </_default>
          <WithStyles(Button)
            className="button active"
            key="0"
            onClick={[Function]}
          >
            <Button
              className="button active"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit-98",
                  "contained": "MuiButton-contained-88",
                  "containedPrimary": "MuiButton-containedPrimary-89",
                  "containedSecondary": "MuiButton-containedSecondary-90",
                  "disabled": "MuiButton-disabled-97",
                  "extendedFab": "MuiButton-extendedFab-95",
                  "fab": "MuiButton-fab-94",
                  "flat": "MuiButton-flat-82",
                  "flatPrimary": "MuiButton-flatPrimary-83",
                  "flatSecondary": "MuiButton-flatSecondary-84",
                  "focusVisible": "MuiButton-focusVisible-96",
                  "fullWidth": "MuiButton-fullWidth-102",
                  "label": "MuiButton-label-78",
                  "mini": "MuiButton-mini-99",
                  "outlined": "MuiButton-outlined-85",
                  "outlinedPrimary": "MuiButton-outlinedPrimary-86",
                  "outlinedSecondary": "MuiButton-outlinedSecondary-87",
                  "raised": "MuiButton-raised-91",
                  "raisedPrimary": "MuiButton-raisedPrimary-92",
                  "raisedSecondary": "MuiButton-raisedSecondary-93",
                  "root": "MuiButton-root-77",
                  "sizeLarge": "MuiButton-sizeLarge-101",
                  "sizeSmall": "MuiButton-sizeSmall-100",
                  "text": "MuiButton-text-79",
                  "textPrimary": "MuiButton-textPrimary-80",
                  "textSecondary": "MuiButton-textSecondary-81",
                }
              }
              color="default"
              component="button"
              disableFocusRipple={false}
              disabled={false}
              fullWidth={false}
              mini={false}
              onClick={[Function]}
              size="medium"
              type="button"
              variant="text"
            >
              <WithStyles(ButtonBase)
                className="MuiButton-root-77 MuiButton-text-79 MuiButton-flat-82 button active"
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="MuiButton-focusVisible-96"
                onClick={[Function]}
                type="button"
              >
                <ButtonBase
                  centerRipple={false}
                  className="MuiButton-root-77 MuiButton-text-79 MuiButton-flat-82 button active"
                  classes={
                    Object {
                      "disabled": "MuiButtonBase-disabled-104",
                      "focusVisible": "MuiButtonBase-focusVisible-105",
                      "root": "MuiButtonBase-root-103",
                    }
                  }
                  component="button"
                  disableRipple={false}
                  disableTouchRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-96"
                  onClick={[Function]}
                  tabIndex="0"
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root-103 MuiButton-root-77 MuiButton-text-79 MuiButton-flat-82 button active"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onContextMenu={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex="0"
                    type="button"
                  >
                    <span
                      className="MuiButton-label-78"
                    >
                      <span>
                        Overview
                      </span>
                    </span>
                    <NoSsr
                      defer={false}
                      fallback={null}
                    >
                      <WithStyles(TouchRipple)
                        center={false}
                        innerRef={[Function]}
                      >
                        <TouchRipple
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child-110",
                              "childLeaving": "MuiTouchRipple-childLeaving-111",
                              "childPulsate": "MuiTouchRipple-childPulsate-112",
                              "ripple": "MuiTouchRipple-ripple-107",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-109",
                              "rippleVisible": "MuiTouchRipple-rippleVisible-108",
                              "root": "MuiTouchRipple-root-106",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="MuiTouchRipple-root-106"
                            component="span"
                            enter={true}
                            exit={true}
                          >
                            <span
                              className="MuiTouchRipple-root-106"
                            />
                          </TransitionGroup>
                        </TouchRipple>
                      </WithStyles(TouchRipple)>
                    </NoSsr>
                  </button>
                </ButtonBase>
              </WithStyles(ButtonBase)>
            </Button>
          </WithStyles(Button)>
          <WithStyles(Button)
            className="button"
            key="1"
            onClick={[Function]}
          >
            <Button
              className="button"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit-98",
                  "contained": "MuiButton-contained-88",
                  "containedPrimary": "MuiButton-containedPrimary-89",
                  "containedSecondary": "MuiButton-containedSecondary-90",
                  "disabled": "MuiButton-disabled-97",
                  "extendedFab": "MuiButton-extendedFab-95",
                  "fab": "MuiButton-fab-94",
                  "flat": "MuiButton-flat-82",
                  "flatPrimary": "MuiButton-flatPrimary-83",
                  "flatSecondary": "MuiButton-flatSecondary-84",
                  "focusVisible": "MuiButton-focusVisible-96",
                  "fullWidth": "MuiButton-fullWidth-102",
                  "label": "MuiButton-label-78",
                  "mini": "MuiButton-mini-99",
                  "outlined": "MuiButton-outlined-85",
                  "outlinedPrimary": "MuiButton-outlinedPrimary-86",
                  "outlinedSecondary": "MuiButton-outlinedSecondary-87",
                  "raised": "MuiButton-raised-91",
                  "raisedPrimary": "MuiButton-raisedPrimary-92",
                  "raisedSecondary": "MuiButton-raisedSecondary-93",
                  "root": "MuiButton-root-77",
                  "sizeLarge": "MuiButton-sizeLarge-101",
                  "sizeSmall": "MuiButton-sizeSmall-100",
                  "text": "MuiButton-text-79",
                  "textPrimary": "MuiButton-textPrimary-80",
                  "textSecondary": "MuiButton-textSecondary-81",
                }
              }
              color="default"
              component="button"
              disableFocusRipple={false}
              disabled={false}
              fullWidth={false}
              mini={false}
              onClick={[Function]}
              size="medium"
              type="button"
              variant="text"
            >
              <WithStyles(ButtonBase)
                className="MuiButton-root-77 MuiButton-text-79 MuiButton-flat-82 button"
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="MuiButton-focusVisible-96"
                onClick={[Function]}
                type="button"
              >
                <ButtonBase
                  centerRipple={false}
                  className="MuiButton-root-77 MuiButton-text-79 MuiButton-flat-82 button"
                  classes={
                    Object {
                      "disabled": "MuiButtonBase-disabled-104",
                      "focusVisible": "MuiButtonBase-focusVisible-105",
                      "root": "MuiButtonBase-root-103",
                    }
                  }
                  component="button"
                  disableRipple={false}
                  disableTouchRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-96"
                  onClick={[Function]}
                  tabIndex="0"
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root-103 MuiButton-root-77 MuiButton-text-79 MuiButton-flat-82 button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onContextMenu={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex="0"
                    type="button"
                  >
                    <span
                      className="MuiButton-label-78"
                    >
                      <span>
                        Lineage Explorer
                      </span>
                    </span>
                    <NoSsr
                      defer={false}
                      fallback={null}
                    >
                      <WithStyles(TouchRipple)
                        center={false}
                        innerRef={[Function]}
                      >
                        <TouchRipple
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child-110",
                              "childLeaving": "MuiTouchRipple-childLeaving-111",
                              "childPulsate": "MuiTouchRipple-childPulsate-112",
                              "ripple": "MuiTouchRipple-ripple-107",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-109",
                              "rippleVisible": "MuiTouchRipple-rippleVisible-108",
                              "root": "MuiTouchRipple-root-106",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="MuiTouchRipple-root-106"
                            component="span"
                            enter={true}
                            exit={true}
                          >
                            <span
                              className="MuiTouchRipple-root-106"
                            />
                          </TransitionGroup>
                        </TouchRipple>
                      </WithStyles(TouchRipple)>
                    </NoSsr>
                  </button>
                </ButtonBase>
              </WithStyles(ButtonBase)>
            </Button>
          </WithStyles(Button)>
        </div>
      </MD2Tabs>
    </div>
    <div
      className=""
    >
      <ResourceInfo
        resource={
          Object {
            "array": Array [
              1,
              1,
              "gs://my-bucket/mnist",
              Array [
                Array [
                  "__ALL_META__",
                  Array [
                    undefined,
                    undefined,
                    "{\\"hyperparameters\\": {\\"early_stop\\": true, \\"layers\\": [10, 3, 1], \\"learning_rate\\": 0.5}, \\"model_type\\": \\"neural network\\", \\"training_framework\\": {\\"name\\": \\"tensorflow\\", \\"version\\": \\"v1.0\\"}}",
                  ],
                ],
                Array [
                  "create_time",
                  Array [
                    undefined,
                    undefined,
                    "2019-06-12T01:21:48.259263Z",
                  ],
                ],
                Array [
                  "description",
                  Array [
                    undefined,
                    undefined,
                    "A really great model",
                  ],
                ],
                Array [
                  "name",
                  Array [
                    undefined,
                    undefined,
                    "test model",
                  ],
                ],
                Array [
                  "version",
                  Array [
                    undefined,
                    undefined,
                    "v1",
                  ],
                ],
              ],
              Array [
                Array [
                  "__kf_run__",
                  Array [
                    undefined,
                    undefined,
                    "1",
                  ],
                ],
                Array [
                  "__kf_workspace__",
                  Array [
                    undefined,
                    undefined,
                    "workspace-1",
                  ],
                ],
              ],
            ],
            "arrayIndexOffset_": -1,
            "convertedPrimitiveFields_": Object {},
            "messageId_": undefined,
            "pivot_": 1.7976931348623157e+308,
            "wrappers_": Object {
              "4": Object {
                "arrClean": true,
                "arr_": Array [
                  Array [
                    "__ALL_META__",
                    Array [
                      undefined,
                      undefined,
                      "{\\"hyperparameters\\": {\\"early_stop\\": true, \\"layers\\": [10, 3, 1], \\"learning_rate\\": 0.5}, \\"model_type\\": \\"neural network\\", \\"training_framework\\": {\\"name\\": \\"tensorflow\\", \\"version\\": \\"v1.0\\"}}",
                    ],
                  ],
                  Array [
                    "create_time",
                    Array [
                      undefined,
                      undefined,
                      "2019-06-12T01:21:48.259263Z",
                    ],
                  ],
                  Array [
                    "description",
                    Array [
                      undefined,
                      undefined,
                      "A really great model",
                    ],
                  ],
                  Array [
                    "name",
                    Array [
                      undefined,
                      undefined,
                      "test model",
                    ],
                  ],
                  Array [
                    "version",
                    Array [
                      undefined,
                      undefined,
                      "v1",
                    ],
                  ],
                ],
                "map_": Object {
                  "__ALL_META__": Object {
                    "key": "__ALL_META__",
                    "value": Array [
                      undefined,
                      undefined,
                      "{\\"hyperparameters\\": {\\"early_stop\\": true, \\"layers\\": [10, 3, 1], \\"learning_rate\\": 0.5}, \\"model_type\\": \\"neural network\\", \\"training_framework\\": {\\"name\\": \\"tensorflow\\", \\"version\\": \\"v1.0\\"}}",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "{\\"hyperparameters\\": {\\"early_stop\\": true, \\"layers\\": [10, 3, 1], \\"learning_rate\\": 0.5}, \\"model_type\\": \\"neural network\\", \\"training_framework\\": {\\"name\\": \\"tensorflow\\", \\"version\\": \\"v1.0\\"}}",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "create_time": Object {
                    "key": "create_time",
                    "value": Array [
                      undefined,
                      undefined,
                      "2019-06-12T01:21:48.259263Z",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "2019-06-12T01:21:48.259263Z",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "description": Object {
                    "key": "description",
                    "value": Array [
                      undefined,
                      undefined,
                      "A really great model",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "A really great model",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "name": Object {
                    "key": "name",
                    "value": Array [
                      undefined,
                      undefined,
                      "test model",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "test model",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "version": Object {
                    "key": "version",
                    "value": Array [
                      undefined,
                      undefined,
                      "v1",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "v1",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                },
                "valueCtor_": [Function],
              },
              "5": Object {
                "arrClean": true,
                "arr_": Array [
                  Array [
                    "__kf_run__",
                    Array [
                      undefined,
                      undefined,
                      "1",
                    ],
                  ],
                  Array [
                    "__kf_workspace__",
                    Array [
                      undefined,
                      undefined,
                      "workspace-1",
                    ],
                  ],
                ],
                "map_": Object {
                  "__kf_run__": Object {
                    "key": "__kf_run__",
                    "value": Array [
                      undefined,
                      undefined,
                      "1",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "1",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "__kf_workspace__": Object {
                    "key": "__kf_workspace__",
                    "value": Array [
                      undefined,
                      undefined,
                      "workspace-1",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "workspace-1",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                },
                "valueCtor_": [Function],
              },
            },
          }
        }
        typeName="Model"
      >
        <section>
          <h1
            className="header"
          >
            Type: 
            Model
          </h1>
          <h2
            className="header2"
          >
            Properties
          </h2>
          <dl
            className="resourceInfo"
          >
            <div
              className="field"
              key="create_time"
            >
              <dt
                className="term"
              >
                create_time
              </dt>
              <dd
                className="value"
              >
                2019-06-12T01:21:48.259263Z
              </dd>
            </div>
            <div
              className="field"
              key="description"
            >
              <dt
                className="term"
              >
                description
              </dt>
              <dd
                className="value"
              >
                A really great model
              </dd>
            </div>
            <div
              className="field"
              key="name"
            >
              <dt
                className="term"
              >
                name
              </dt>
              <dd
                className="value"
              >
                test model
              </dd>
            </div>
            <div
              className="field"
              key="version"
            >
              <dt
                className="term"
              >
                version
              </dt>
              <dd
                className="value"
              >
                v1
              </dd>
            </div>
          </dl>
          <h2
            className="header2"
          >
            Custom Properties
          </h2>
          <dl
            className="resourceInfo"
          >
            <div
              className="field"
              key="__kf_run__"
            >
              <dt
                className="term"
              >
                __kf_run__
              </dt>
              <dd
                className="value"
              >
                1
              </dd>
            </div>
            <div
              className="field"
              key="__kf_workspace__"
            >
              <dt
                className="term"
              >
                __kf_workspace__
              </dt>
              <dd
                className="value"
              >
                workspace-1
              </dd>
            </div>
          </dl>
        </section>
      </ResourceInfo>
    </div>
  </div>
</ArtifactDetails>
`;

exports[`ArtifactDetails Renders with a Model Artifact and updates the page title 1`] = `
<ArtifactDetails
  history={
    Object {
      "push": [MockFunction],
    }
  }
  location={Object {}}
  match={
    Object {
      "params": Object {
        "artifactType": "kubeflow.org/alpha/model",
        "id": "1",
      },
    }
  }
  toolbarProps={
    Object {
      "actions": Array [],
      "breadcrumbs": Array [
        Object {
          "displayName": "Artifacts",
          "href": "/artifacts",
        },
      ],
      "pageTitle": "Model 1 details",
    }
  }
  updateBanner={[MockFunction]}
  updateDialog={[MockFunction]}
  updateSnackbar={[MockFunction]}
  updateToolbar={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "actions": Array [],
            "breadcrumbs": Array [
              Object {
                "displayName": "Artifacts",
                "href": "/artifacts",
              },
            ],
            "pageTitle": "Model 1 details",
          },
        ],
        Array [
          Object {
            "pageTitle": "test model (version: v1)",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="page"
  >
    <div
      className=""
    >
      <MD2Tabs
        onSwitch={[Function]}
        selectedTab={0}
        tabs={
          Array [
            "Overview",
            "Lineage Explorer",
          ]
        }
      >
        <div
          className="tabs"
        >
          <div
            className="indicator"
          />
          <_default
            units={10}
          >
            <span
              style={
                Object {
                  "display": "inline-block",
                  "minWidth": 10,
                  "width": 10,
                }
              }
            />
          </_default>
          <WithStyles(Button)
            className="button active"
            key="0"
            onClick={[Function]}
          >
            <Button
              className="button active"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit-32",
                  "contained": "MuiButton-contained-22",
                  "containedPrimary": "MuiButton-containedPrimary-23",
                  "containedSecondary": "MuiButton-containedSecondary-24",
                  "disabled": "MuiButton-disabled-31",
                  "extendedFab": "MuiButton-extendedFab-29",
                  "fab": "MuiButton-fab-28",
                  "flat": "MuiButton-flat-16",
                  "flatPrimary": "MuiButton-flatPrimary-17",
                  "flatSecondary": "MuiButton-flatSecondary-18",
                  "focusVisible": "MuiButton-focusVisible-30",
                  "fullWidth": "MuiButton-fullWidth-36",
                  "label": "MuiButton-label-12",
                  "mini": "MuiButton-mini-33",
                  "outlined": "MuiButton-outlined-19",
                  "outlinedPrimary": "MuiButton-outlinedPrimary-20",
                  "outlinedSecondary": "MuiButton-outlinedSecondary-21",
                  "raised": "MuiButton-raised-25",
                  "raisedPrimary": "MuiButton-raisedPrimary-26",
                  "raisedSecondary": "MuiButton-raisedSecondary-27",
                  "root": "MuiButton-root-11",
                  "sizeLarge": "MuiButton-sizeLarge-35",
                  "sizeSmall": "MuiButton-sizeSmall-34",
                  "text": "MuiButton-text-13",
                  "textPrimary": "MuiButton-textPrimary-14",
                  "textSecondary": "MuiButton-textSecondary-15",
                }
              }
              color="default"
              component="button"
              disableFocusRipple={false}
              disabled={false}
              fullWidth={false}
              mini={false}
              onClick={[Function]}
              size="medium"
              type="button"
              variant="text"
            >
              <WithStyles(ButtonBase)
                className="MuiButton-root-11 MuiButton-text-13 MuiButton-flat-16 button active"
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="MuiButton-focusVisible-30"
                onClick={[Function]}
                type="button"
              >
                <ButtonBase
                  centerRipple={false}
                  className="MuiButton-root-11 MuiButton-text-13 MuiButton-flat-16 button active"
                  classes={
                    Object {
                      "disabled": "MuiButtonBase-disabled-38",
                      "focusVisible": "MuiButtonBase-focusVisible-39",
                      "root": "MuiButtonBase-root-37",
                    }
                  }
                  component="button"
                  disableRipple={false}
                  disableTouchRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-30"
                  onClick={[Function]}
                  tabIndex="0"
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root-37 MuiButton-root-11 MuiButton-text-13 MuiButton-flat-16 button active"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onContextMenu={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex="0"
                    type="button"
                  >
                    <span
                      className="MuiButton-label-12"
                    >
                      <span>
                        Overview
                      </span>
                    </span>
                    <NoSsr
                      defer={false}
                      fallback={null}
                    >
                      <WithStyles(TouchRipple)
                        center={false}
                        innerRef={[Function]}
                      >
                        <TouchRipple
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child-44",
                              "childLeaving": "MuiTouchRipple-childLeaving-45",
                              "childPulsate": "MuiTouchRipple-childPulsate-46",
                              "ripple": "MuiTouchRipple-ripple-41",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-43",
                              "rippleVisible": "MuiTouchRipple-rippleVisible-42",
                              "root": "MuiTouchRipple-root-40",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="MuiTouchRipple-root-40"
                            component="span"
                            enter={true}
                            exit={true}
                          >
                            <span
                              className="MuiTouchRipple-root-40"
                            />
                          </TransitionGroup>
                        </TouchRipple>
                      </WithStyles(TouchRipple)>
                    </NoSsr>
                  </button>
                </ButtonBase>
              </WithStyles(ButtonBase)>
            </Button>
          </WithStyles(Button)>
          <WithStyles(Button)
            className="button"
            key="1"
            onClick={[Function]}
          >
            <Button
              className="button"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit-32",
                  "contained": "MuiButton-contained-22",
                  "containedPrimary": "MuiButton-containedPrimary-23",
                  "containedSecondary": "MuiButton-containedSecondary-24",
                  "disabled": "MuiButton-disabled-31",
                  "extendedFab": "MuiButton-extendedFab-29",
                  "fab": "MuiButton-fab-28",
                  "flat": "MuiButton-flat-16",
                  "flatPrimary": "MuiButton-flatPrimary-17",
                  "flatSecondary": "MuiButton-flatSecondary-18",
                  "focusVisible": "MuiButton-focusVisible-30",
                  "fullWidth": "MuiButton-fullWidth-36",
                  "label": "MuiButton-label-12",
                  "mini": "MuiButton-mini-33",
                  "outlined": "MuiButton-outlined-19",
                  "outlinedPrimary": "MuiButton-outlinedPrimary-20",
                  "outlinedSecondary": "MuiButton-outlinedSecondary-21",
                  "raised": "MuiButton-raised-25",
                  "raisedPrimary": "MuiButton-raisedPrimary-26",
                  "raisedSecondary": "MuiButton-raisedSecondary-27",
                  "root": "MuiButton-root-11",
                  "sizeLarge": "MuiButton-sizeLarge-35",
                  "sizeSmall": "MuiButton-sizeSmall-34",
                  "text": "MuiButton-text-13",
                  "textPrimary": "MuiButton-textPrimary-14",
                  "textSecondary": "MuiButton-textSecondary-15",
                }
              }
              color="default"
              component="button"
              disableFocusRipple={false}
              disabled={false}
              fullWidth={false}
              mini={false}
              onClick={[Function]}
              size="medium"
              type="button"
              variant="text"
            >
              <WithStyles(ButtonBase)
                className="MuiButton-root-11 MuiButton-text-13 MuiButton-flat-16 button"
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="MuiButton-focusVisible-30"
                onClick={[Function]}
                type="button"
              >
                <ButtonBase
                  centerRipple={false}
                  className="MuiButton-root-11 MuiButton-text-13 MuiButton-flat-16 button"
                  classes={
                    Object {
                      "disabled": "MuiButtonBase-disabled-38",
                      "focusVisible": "MuiButtonBase-focusVisible-39",
                      "root": "MuiButtonBase-root-37",
                    }
                  }
                  component="button"
                  disableRipple={false}
                  disableTouchRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="MuiButton-focusVisible-30"
                  onClick={[Function]}
                  tabIndex="0"
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root-37 MuiButton-root-11 MuiButton-text-13 MuiButton-flat-16 button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onContextMenu={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex="0"
                    type="button"
                  >
                    <span
                      className="MuiButton-label-12"
                    >
                      <span>
                        Lineage Explorer
                      </span>
                    </span>
                    <NoSsr
                      defer={false}
                      fallback={null}
                    >
                      <WithStyles(TouchRipple)
                        center={false}
                        innerRef={[Function]}
                      >
                        <TouchRipple
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child-44",
                              "childLeaving": "MuiTouchRipple-childLeaving-45",
                              "childPulsate": "MuiTouchRipple-childPulsate-46",
                              "ripple": "MuiTouchRipple-ripple-41",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate-43",
                              "rippleVisible": "MuiTouchRipple-rippleVisible-42",
                              "root": "MuiTouchRipple-root-40",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            className="MuiTouchRipple-root-40"
                            component="span"
                            enter={true}
                            exit={true}
                          >
                            <span
                              className="MuiTouchRipple-root-40"
                            />
                          </TransitionGroup>
                        </TouchRipple>
                      </WithStyles(TouchRipple)>
                    </NoSsr>
                  </button>
                </ButtonBase>
              </WithStyles(ButtonBase)>
            </Button>
          </WithStyles(Button)>
        </div>
      </MD2Tabs>
    </div>
    <div
      className=""
    >
      <ResourceInfo
        resource={
          Object {
            "array": Array [
              1,
              1,
              "gs://my-bucket/mnist",
              Array [
                Array [
                  "__ALL_META__",
                  Array [
                    undefined,
                    undefined,
                    "{\\"hyperparameters\\": {\\"early_stop\\": true, \\"layers\\": [10, 3, 1], \\"learning_rate\\": 0.5}, \\"model_type\\": \\"neural network\\", \\"training_framework\\": {\\"name\\": \\"tensorflow\\", \\"version\\": \\"v1.0\\"}}",
                  ],
                ],
                Array [
                  "create_time",
                  Array [
                    undefined,
                    undefined,
                    "2019-06-12T01:21:48.259263Z",
                  ],
                ],
                Array [
                  "description",
                  Array [
                    undefined,
                    undefined,
                    "A really great model",
                  ],
                ],
                Array [
                  "name",
                  Array [
                    undefined,
                    undefined,
                    "test model",
                  ],
                ],
                Array [
                  "version",
                  Array [
                    undefined,
                    undefined,
                    "v1",
                  ],
                ],
              ],
              Array [
                Array [
                  "__kf_run__",
                  Array [
                    undefined,
                    undefined,
                    "1",
                  ],
                ],
                Array [
                  "__kf_workspace__",
                  Array [
                    undefined,
                    undefined,
                    "workspace-1",
                  ],
                ],
              ],
            ],
            "arrayIndexOffset_": -1,
            "convertedPrimitiveFields_": Object {},
            "messageId_": undefined,
            "pivot_": 1.7976931348623157e+308,
            "wrappers_": Object {
              "4": Object {
                "arrClean": true,
                "arr_": Array [
                  Array [
                    "__ALL_META__",
                    Array [
                      undefined,
                      undefined,
                      "{\\"hyperparameters\\": {\\"early_stop\\": true, \\"layers\\": [10, 3, 1], \\"learning_rate\\": 0.5}, \\"model_type\\": \\"neural network\\", \\"training_framework\\": {\\"name\\": \\"tensorflow\\", \\"version\\": \\"v1.0\\"}}",
                    ],
                  ],
                  Array [
                    "create_time",
                    Array [
                      undefined,
                      undefined,
                      "2019-06-12T01:21:48.259263Z",
                    ],
                  ],
                  Array [
                    "description",
                    Array [
                      undefined,
                      undefined,
                      "A really great model",
                    ],
                  ],
                  Array [
                    "name",
                    Array [
                      undefined,
                      undefined,
                      "test model",
                    ],
                  ],
                  Array [
                    "version",
                    Array [
                      undefined,
                      undefined,
                      "v1",
                    ],
                  ],
                ],
                "map_": Object {
                  "__ALL_META__": Object {
                    "key": "__ALL_META__",
                    "value": Array [
                      undefined,
                      undefined,
                      "{\\"hyperparameters\\": {\\"early_stop\\": true, \\"layers\\": [10, 3, 1], \\"learning_rate\\": 0.5}, \\"model_type\\": \\"neural network\\", \\"training_framework\\": {\\"name\\": \\"tensorflow\\", \\"version\\": \\"v1.0\\"}}",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "{\\"hyperparameters\\": {\\"early_stop\\": true, \\"layers\\": [10, 3, 1], \\"learning_rate\\": 0.5}, \\"model_type\\": \\"neural network\\", \\"training_framework\\": {\\"name\\": \\"tensorflow\\", \\"version\\": \\"v1.0\\"}}",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "create_time": Object {
                    "key": "create_time",
                    "value": Array [
                      undefined,
                      undefined,
                      "2019-06-12T01:21:48.259263Z",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "2019-06-12T01:21:48.259263Z",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "description": Object {
                    "key": "description",
                    "value": Array [
                      undefined,
                      undefined,
                      "A really great model",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "A really great model",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "name": Object {
                    "key": "name",
                    "value": Array [
                      undefined,
                      undefined,
                      "test model",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "test model",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "version": Object {
                    "key": "version",
                    "value": Array [
                      undefined,
                      undefined,
                      "v1",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "v1",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                },
                "valueCtor_": [Function],
              },
              "5": Object {
                "arrClean": true,
                "arr_": Array [
                  Array [
                    "__kf_run__",
                    Array [
                      undefined,
                      undefined,
                      "1",
                    ],
                  ],
                  Array [
                    "__kf_workspace__",
                    Array [
                      undefined,
                      undefined,
                      "workspace-1",
                    ],
                  ],
                ],
                "map_": Object {
                  "__kf_run__": Object {
                    "key": "__kf_run__",
                    "value": Array [
                      undefined,
                      undefined,
                      "1",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "1",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                  "__kf_workspace__": Object {
                    "key": "__kf_workspace__",
                    "value": Array [
                      undefined,
                      undefined,
                      "workspace-1",
                    ],
                    "valueWrapper": Object {
                      "array": Array [
                        undefined,
                        undefined,
                        "workspace-1",
                      ],
                      "arrayIndexOffset_": -1,
                      "convertedPrimitiveFields_": Object {},
                      "messageId_": undefined,
                      "pivot_": 1.7976931348623157e+308,
                      "wrappers_": null,
                    },
                  },
                },
                "valueCtor_": [Function],
              },
            },
          }
        }
        typeName="Model"
      >
        <section>
          <h1
            className="header"
          >
            Type: 
            Model
          </h1>
          <h2
            className="header2"
          >
            Properties
          </h2>
          <dl
            className="resourceInfo"
          >
            <div
              className="field"
              key="create_time"
            >
              <dt
                className="term"
              >
                create_time
              </dt>
              <dd
                className="value"
              >
                2019-06-12T01:21:48.259263Z
              </dd>
            </div>
            <div
              className="field"
              key="description"
            >
              <dt
                className="term"
              >
                description
              </dt>
              <dd
                className="value"
              >
                A really great model
              </dd>
            </div>
            <div
              className="field"
              key="name"
            >
              <dt
                className="term"
              >
                name
              </dt>
              <dd
                className="value"
              >
                test model
              </dd>
            </div>
            <div
              className="field"
              key="version"
            >
              <dt
                className="term"
              >
                version
              </dt>
              <dd
                className="value"
              >
                v1
              </dd>
            </div>
          </dl>
          <h2
            className="header2"
          >
            Custom Properties
          </h2>
          <dl
            className="resourceInfo"
          >
            <div
              className="field"
              key="__kf_run__"
            >
              <dt
                className="term"
              >
                __kf_run__
              </dt>
              <dd
                className="value"
              >
                1
              </dd>
            </div>
            <div
              className="field"
              key="__kf_workspace__"
            >
              <dt
                className="term"
              >
                __kf_workspace__
              </dt>
              <dd
                className="value"
              >
                workspace-1
              </dd>
            </div>
          </dl>
        </section>
      </ResourceInfo>
    </div>
  </div>
</ArtifactDetails>
`;
