// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Placeholder for Core API definitions.

syntax = "proto3";

option go_package = "github.com/kubeflow/metadata/api";

package api;

import "api/api.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

message CreateArtifactTypeRequest {
  ArtifactType artifact_type = 1;
}

message CreateArtifactTypeResponse {
  // Newly created artifact type with id.
  ArtifactType artifact_type = 1;
}

message GetArtifactTypeRequest {
  // Artifact names are of the form `artifact_types/{namespace}/{name}`.
  string name = 1;
}

message GetArtifactTypeResponse {
  ArtifactType artifact_type = 1;
}

message ListArtifactTypesRequest {}

message ListArtifactTypesResponse {
  repeated ArtifactType artifact_types = 1;
}

message DeleteArtifactTypeRequest {
  string name = 1;
}

message CreateArtifactRequest {
  // Creates the specified artifact as an instance of ArtifactType with this
  // fully qualified name. |parent| takes the form
  // `artifact_types/{namespace}/{name>}`.
  string parent = 1;
  // The Artifact to create. Note that Artifact.type_id is ignored.
  Artifact artifact = 2;
}

message CreateArtifactResponse {
  // Newly created artifact with id.
  Artifact artifact = 1;
}

message GetArtifactRequest {
  // Artifact name is like
  // `artifact_types/{namespace}/{typename}/artifact/{id}`.
  string name = 1;
}

message GetArtifactResponse {
  Artifact artifact = 1;
}

message ListArtifactsRequest {
  string name = 1;
}

message ListArtifactsResponse {
  repeated Artifact artifacts = 1;
}

message DeleteArtifactRequest {
  string name = 1;
}

message CreateExecutionTypeRequest {
  ExecutionType execution_type = 1;
}

message CreateExecutionTypeResponse {
  // Newly created execution type with id.
  ExecutionType execution_type = 1;
}

message GetExecutionTypeRequest {
  int64 id = 1;
}

message GetExecutionTypeResponse {
  ExecutionType execution_type = 1;
}

message ListExecutionTypesRequest {}

message ListExecutionTypesResponse {
  repeated ExecutionType execution_types = 1;
}

message DeleteExecutionTypeRequest {
  int64 id = 1;
}

message CreateExecutionRequest {
  Execution execution = 1;
}

message CreateExecutionResponse {
  // Newly created execution with id.
  Execution execution = 1;
}

message GetExecutionRequest {
  int64 id = 1;
}

message GetExecutionResponse {
  Execution execution = 1;
}

message ListExecutionsRequest {}

message ListExecutionsResponse {
  repeated Execution executions = 1;
}

message DeleteExecutionRequest {
  int64 id = 1;
}


service MetadataService {
  rpc CreateArtifactType(CreateArtifactTypeRequest)
      returns (CreateArtifactTypeResponse) {
    option (google.api.http) = {
      post: "/api/v1alpha1/artifact_types"
      body: "artifact_type"
    };
  }

  rpc GetArtifactType(GetArtifactTypeRequest)
      returns (GetArtifactTypeResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/{name=artifact_types/*}"
    };
  }

  rpc ListArtifactTypes(ListArtifactTypesRequest)
      returns (ListArtifactTypesResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/artifact_types"
    };
  }

  rpc DeleteArtifactType(DeleteArtifactTypeRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1alpha1/{name=artifact_types/*}"
    };
  }

  rpc CreateArtifact(CreateArtifactRequest)
      returns (CreateArtifactResponse) {
    option (google.api.http) = {
      post: "/api/v1alpha1/{parent=artifact_types/*}/artifacts"
      body: "artifact"
    };
  }

  rpc GetArtifact(GetArtifactRequest)
      returns (GetArtifactResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/{name=artifact_types/*/artifacts/*}"
    };
  }

  rpc ListArtifacts(ListArtifactsRequest)
      returns (ListArtifactsResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/{name=artifact_types/*}/artifacts"
    };
  }

  rpc DeleteArtifact(DeleteArtifactRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1alpha1/{name=artifact_types/*/artifacts/*}"
    };
  }

  rpc CreateExecutionType(CreateExecutionTypeRequest)
      returns (CreateExecutionTypeResponse) {
    option (google.api.http) = {
      post: "/api/v1alpha1/execution_types"
      body: "execution_type"
    };
  }

  rpc GetExecutionType(GetExecutionTypeRequest)
      returns (GetExecutionTypeResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/execution_type/{id}"
    };
  }

  rpc ListExecutionTypes(ListExecutionTypesRequest)
      returns (ListExecutionTypesResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/execution_types"
    };
  }

  rpc DeleteExecutionType(DeleteExecutionTypeRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1alpha1/execution_types/{id}"
    };
  }

  rpc CreateExecution(CreateExecutionRequest)
      returns (CreateExecutionResponse) {
    option (google.api.http) = {
      post: "/api/v1alpha1/executions"
      body: "execution"
    };
  }

  rpc GetExecution(GetExecutionRequest)
      returns (GetExecutionResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/execution/{id}"
    };
  }

  rpc ListExecutions(ListExecutionsRequest)
      returns (ListExecutionsResponse) {
    option (google.api.http) = {
      get: "/api/v1alpha1/executions"
    };
  }

  rpc DeleteExecution(DeleteExecutionRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1alpha1/executions/{id}"
    };
  }

  // TODO(neuromage): Flesh out CRUD methods on the following resources:
  // - Workspaces
  // - Namespaces
  // - Executions
  // - ExecutionTypes
}
