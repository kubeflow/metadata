// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ml_metadata/proto/metadata_store.proto

package ml_metadata

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TODO(martinz): consider moving this inside some message, to avoid having
// literals directly in apo package.
type PropertyType int32

const (
	PropertyType_UNKNOWN PropertyType = 0
	PropertyType_INT     PropertyType = 1
	PropertyType_DOUBLE  PropertyType = 2
	PropertyType_STRING  PropertyType = 3
)

var PropertyType_name = map[int32]string{
	0: "UNKNOWN",
	1: "INT",
	2: "DOUBLE",
	3: "STRING",
}
var PropertyType_value = map[string]int32{
	"UNKNOWN": 0,
	"INT":     1,
	"DOUBLE":  2,
	"STRING":  3,
}

func (x PropertyType) Enum() *PropertyType {
	p := new(PropertyType)
	*p = x
	return p
}
func (x PropertyType) String() string {
	return proto.EnumName(PropertyType_name, int32(x))
}
func (x *PropertyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PropertyType_value, data, "PropertyType")
	if err != nil {
		return err
	}
	*x = PropertyType(value)
	return nil
}
func (PropertyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{0}
}

// Events distinguish between an artifact that is written by the execution
// (possibly as a cache), versus artifacts that are part of the declared
// output of the Execution. For more information on what DECLARED_ means,
// see the comment on the message.
type Event_Type int32

const (
	Event_UNKNOWN         Event_Type = 0
	Event_DECLARED_OUTPUT Event_Type = 1
	Event_DECLARED_INPUT  Event_Type = 2
	Event_INPUT           Event_Type = 3
	Event_OUTPUT          Event_Type = 4
)

var Event_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "DECLARED_OUTPUT",
	2: "DECLARED_INPUT",
	3: "INPUT",
	4: "OUTPUT",
}
var Event_Type_value = map[string]int32{
	"UNKNOWN":         0,
	"DECLARED_OUTPUT": 1,
	"DECLARED_INPUT":  2,
	"INPUT":           3,
	"OUTPUT":          4,
}

func (x Event_Type) Enum() *Event_Type {
	p := new(Event_Type)
	*p = x
	return p
}
func (x Event_Type) String() string {
	return proto.EnumName(Event_Type_name, int32(x))
}
func (x *Event_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_Type_value, data, "Event_Type")
	if err != nil {
		return err
	}
	*x = Event_Type(value)
	return nil
}
func (Event_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{3, 0}
}

// TODO(martinz): consider adding INVALIDATED as a state.
type Execution_State int32

const (
	Execution_UNKNOWN  Execution_State = 0
	Execution_NEW      Execution_State = 1
	Execution_RUNNING  Execution_State = 2
	Execution_COMPLETE Execution_State = 3
	Execution_FAILED   Execution_State = 4
)

var Execution_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "NEW",
	2: "RUNNING",
	3: "COMPLETE",
	4: "FAILED",
}
var Execution_State_value = map[string]int32{
	"UNKNOWN":  0,
	"NEW":      1,
	"RUNNING":  2,
	"COMPLETE": 3,
	"FAILED":   4,
}

func (x Execution_State) Enum() *Execution_State {
	p := new(Execution_State)
	*p = x
	return p
}
func (x Execution_State) String() string {
	return proto.EnumName(Execution_State_name, int32(x))
}
func (x *Execution_State) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Execution_State_value, data, "Execution_State")
	if err != nil {
		return err
	}
	*x = Execution_State(value)
	return nil
}
func (Execution_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{4, 0}
}

// Connection parameters for SQLite3 based metadata source.
type SqliteMetadataSourceConfig_ConnectionMode int32

const (
	SqliteMetadataSourceConfig_UNKNOWN SqliteMetadataSourceConfig_ConnectionMode = 0
	// Connect a metadata source in read-only mode. Connection fail if the
	// sqlite3 database at the `filename` does not exist. Any queries modifying
	// the database fail.
	SqliteMetadataSourceConfig_READONLY SqliteMetadataSourceConfig_ConnectionMode = 1
	// Connect a metadata source in read/write mode. Connection fail if the
	// sqlite3 database at the `filename` does not exist.
	SqliteMetadataSourceConfig_READWRITE SqliteMetadataSourceConfig_ConnectionMode = 2
	// Similar to READWRITE. In addition, it creates the database if not exits.
	SqliteMetadataSourceConfig_READWRITE_OPENCREATE SqliteMetadataSourceConfig_ConnectionMode = 3
)

var SqliteMetadataSourceConfig_ConnectionMode_name = map[int32]string{
	0: "UNKNOWN",
	1: "READONLY",
	2: "READWRITE",
	3: "READWRITE_OPENCREATE",
}
var SqliteMetadataSourceConfig_ConnectionMode_value = map[string]int32{
	"UNKNOWN":              0,
	"READONLY":             1,
	"READWRITE":            2,
	"READWRITE_OPENCREATE": 3,
}

func (x SqliteMetadataSourceConfig_ConnectionMode) Enum() *SqliteMetadataSourceConfig_ConnectionMode {
	p := new(SqliteMetadataSourceConfig_ConnectionMode)
	*p = x
	return p
}
func (x SqliteMetadataSourceConfig_ConnectionMode) String() string {
	return proto.EnumName(SqliteMetadataSourceConfig_ConnectionMode_name, int32(x))
}
func (x *SqliteMetadataSourceConfig_ConnectionMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SqliteMetadataSourceConfig_ConnectionMode_value, data, "SqliteMetadataSourceConfig_ConnectionMode")
	if err != nil {
		return err
	}
	*x = SqliteMetadataSourceConfig_ConnectionMode(value)
	return nil
}
func (SqliteMetadataSourceConfig_ConnectionMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{16, 0}
}

// A value in properties.
type Value struct {
	// TODO(martinz): the types here may evolve over time.
	//
	// Types that are valid to be assigned to Value:
	//	*Value_IntValue
	//	*Value_DoubleValue
	//	*Value_StringValue
	Value                isValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{0}
}
func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (dst *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(dst, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

type isValue_Value interface {
	isValue_Value()
}

type Value_IntValue struct {
	IntValue int64 `protobuf:"varint,1,opt,name=int_value,json=intValue,oneof"`
}

type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,2,opt,name=double_value,json=doubleValue,oneof"`
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,oneof"`
}

func (*Value_IntValue) isValue_Value() {}

func (*Value_DoubleValue) isValue_Value() {}

func (*Value_StringValue) isValue_Value() {}

func (m *Value) GetValue() isValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Value) GetIntValue() int64 {
	if x, ok := m.GetValue().(*Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (m *Value) GetDoubleValue() float64 {
	if x, ok := m.GetValue().(*Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *Value) GetStringValue() string {
	if x, ok := m.GetValue().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Value_OneofMarshaler, _Value_OneofUnmarshaler, _Value_OneofSizer, []interface{}{
		(*Value_IntValue)(nil),
		(*Value_DoubleValue)(nil),
		(*Value_StringValue)(nil),
	}
}

func _Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Value)
	// value
	switch x := m.Value.(type) {
	case *Value_IntValue:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IntValue))
	case *Value_DoubleValue:
		b.EncodeVarint(2<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.DoubleValue))
	case *Value_StringValue:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringValue)
	case nil:
	default:
		return fmt.Errorf("Value.Value has unexpected type %T", x)
	}
	return nil
}

func _Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Value)
	switch tag {
	case 1: // value.int_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Value_IntValue{int64(x)}
		return true, err
	case 2: // value.double_value
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Value = &Value_DoubleValue{math.Float64frombits(x)}
		return true, err
	case 3: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &Value_StringValue{x}
		return true, err
	default:
		return false, nil
	}
}

func _Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Value)
	// value
	switch x := m.Value.(type) {
	case *Value_IntValue:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.IntValue))
	case *Value_DoubleValue:
		n += 1 // tag and wire
		n += 8
	case *Value_StringValue:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.StringValue)))
		n += len(x.StringValue)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Artifact struct {
	// The id of the artifact.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The id of an ArtifactType.
	// Type must be specified when an artifact is created, and it cannot be
	// changed.
	TypeId *int64 `protobuf:"varint,2,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	// The uniform resource identifier of the physical artifact.
	// May be empty if there is no physical artifact.
	Uri *string `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	// Properties of the artifact.
	// Properties must be specified in the ArtifactType.
	Properties map[string]*Value `protobuf:"bytes,4,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// User provided custom properties which are not defined by its type.
	CustomProperties     map[string]*Value `protobuf:"bytes,5,rep,name=custom_properties,json=customProperties" json:"custom_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{1}
}
func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (dst *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(dst, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Artifact) GetTypeId() int64 {
	if m != nil && m.TypeId != nil {
		return *m.TypeId
	}
	return 0
}

func (m *Artifact) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *Artifact) GetProperties() map[string]*Value {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Artifact) GetCustomProperties() map[string]*Value {
	if m != nil {
		return m.CustomProperties
	}
	return nil
}

type ArtifactType struct {
	// The id of the type. 1-1 relationship between type names and IDs.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The name of the type.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The schema of the type.
	// Properties are always optional in the artifact.
	// Properties of an artifact type can be expanded but not contracted (i.e.,
	// you can add columns but not remove them).
	Properties           map[string]PropertyType `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=ml_metadata.PropertyType"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ArtifactType) Reset()         { *m = ArtifactType{} }
func (m *ArtifactType) String() string { return proto.CompactTextString(m) }
func (*ArtifactType) ProtoMessage()    {}
func (*ArtifactType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{2}
}
func (m *ArtifactType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactType.Unmarshal(m, b)
}
func (m *ArtifactType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactType.Marshal(b, m, deterministic)
}
func (dst *ArtifactType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactType.Merge(dst, src)
}
func (m *ArtifactType) XXX_Size() int {
	return xxx_messageInfo_ArtifactType.Size(m)
}
func (m *ArtifactType) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactType.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactType proto.InternalMessageInfo

func (m *ArtifactType) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ArtifactType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ArtifactType) GetProperties() map[string]PropertyType {
	if m != nil {
		return m.Properties
	}
	return nil
}

// An event represents a relationship between an artifact ID and an
// execution.
// There are four kinds of events, relating to both input and output, as
// well as declared versus undeclared.
// For example, the DECLARED_INPUT events are part of the signature of an
// execution. For example, consider:
// my_execution({"data":[3,7],"schema":8})
// Where 3, 7, and 8 are artifact_ids. Assuming execution_id is 12, this
// becomes:
// {artifact_id:3, execution_id: 12, type:DECLARED_INPUT,
//  path:{step:[{"key":"data"},{"index":0}]}}
// {artifact_id:7, execution_id: 12, type:DECLARED_INPUT,
//  path:{step:[{"key":"data"},{"index":1}]}}
// {artifact_id:8, execution_id: 12, type:DECLARED_INPUT,
//  path:{step:[{"key":"schema"}]}}
// The INPUT is an artifact actually read by the execution.
// The OUTPUT is an artifact actually written by the execution.
// The DECLARED_OUTPUT are the artifacts that are the "official" output.
// For example, the trainer may output multiple caches of the parameters
// (as OUTPUT objects),
// but then finally write the SavedModel as a DECLARED_OUTPUT.
// TODO(martinz): add a type for Event, similar to ArtifactType.
type Event struct {
	// The artifact id is required for an event, and should refer to an
	// existing artifact.
	ArtifactId *int64 `protobuf:"varint,1,opt,name=artifact_id,json=artifactId" json:"artifact_id,omitempty"`
	// The execution_id is required for an event, and should refer to an
	// existing execution.
	ExecutionId *int64 `protobuf:"varint,2,opt,name=execution_id,json=executionId" json:"execution_id,omitempty"`
	// The path in an artifact struct, or the name of an artifact.
	Path *Event_Path `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	// The type of an event.
	Type *Event_Type `protobuf:"varint,4,opt,name=type,enum=ml_metadata.Event_Type" json:"type,omitempty"`
	// Time the event occurred
	// Epoch is Jan 1, 1970, UTC
	MillisecondsSinceEpoch *int64   `protobuf:"varint,5,opt,name=milliseconds_since_epoch,json=millisecondsSinceEpoch" json:"milliseconds_since_epoch,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{3}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetArtifactId() int64 {
	if m != nil && m.ArtifactId != nil {
		return *m.ArtifactId
	}
	return 0
}

func (m *Event) GetExecutionId() int64 {
	if m != nil && m.ExecutionId != nil {
		return *m.ExecutionId
	}
	return 0
}

func (m *Event) GetPath() *Event_Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *Event) GetType() Event_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Event_UNKNOWN
}

func (m *Event) GetMillisecondsSinceEpoch() int64 {
	if m != nil && m.MillisecondsSinceEpoch != nil {
		return *m.MillisecondsSinceEpoch
	}
	return 0
}

// A simple path (e.g. {step{key:"foo"}}) can name an artifact in the context
// of an execution.
type Event_Path struct {
	// A simple path (e.g. {step{key:"foo"}}) can name an artifact in the
	// context of an execution.
	Steps                []*Event_Path_Step `protobuf:"bytes,1,rep,name=steps" json:"steps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Event_Path) Reset()         { *m = Event_Path{} }
func (m *Event_Path) String() string { return proto.CompactTextString(m) }
func (*Event_Path) ProtoMessage()    {}
func (*Event_Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{3, 0}
}
func (m *Event_Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event_Path.Unmarshal(m, b)
}
func (m *Event_Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event_Path.Marshal(b, m, deterministic)
}
func (dst *Event_Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_Path.Merge(dst, src)
}
func (m *Event_Path) XXX_Size() int {
	return xxx_messageInfo_Event_Path.Size(m)
}
func (m *Event_Path) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_Path.DiscardUnknown(m)
}

var xxx_messageInfo_Event_Path proto.InternalMessageInfo

func (m *Event_Path) GetSteps() []*Event_Path_Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

type Event_Path_Step struct {
	// Types that are valid to be assigned to Value:
	//	*Event_Path_Step_Index
	//	*Event_Path_Step_Key
	Value                isEvent_Path_Step_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Event_Path_Step) Reset()         { *m = Event_Path_Step{} }
func (m *Event_Path_Step) String() string { return proto.CompactTextString(m) }
func (*Event_Path_Step) ProtoMessage()    {}
func (*Event_Path_Step) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{3, 0, 0}
}
func (m *Event_Path_Step) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event_Path_Step.Unmarshal(m, b)
}
func (m *Event_Path_Step) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event_Path_Step.Marshal(b, m, deterministic)
}
func (dst *Event_Path_Step) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event_Path_Step.Merge(dst, src)
}
func (m *Event_Path_Step) XXX_Size() int {
	return xxx_messageInfo_Event_Path_Step.Size(m)
}
func (m *Event_Path_Step) XXX_DiscardUnknown() {
	xxx_messageInfo_Event_Path_Step.DiscardUnknown(m)
}

var xxx_messageInfo_Event_Path_Step proto.InternalMessageInfo

type isEvent_Path_Step_Value interface {
	isEvent_Path_Step_Value()
}

type Event_Path_Step_Index struct {
	Index int64 `protobuf:"varint,1,opt,name=index,oneof"`
}

type Event_Path_Step_Key struct {
	Key string `protobuf:"bytes,2,opt,name=key,oneof"`
}

func (*Event_Path_Step_Index) isEvent_Path_Step_Value() {}

func (*Event_Path_Step_Key) isEvent_Path_Step_Value() {}

func (m *Event_Path_Step) GetValue() isEvent_Path_Step_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Event_Path_Step) GetIndex() int64 {
	if x, ok := m.GetValue().(*Event_Path_Step_Index); ok {
		return x.Index
	}
	return 0
}

func (m *Event_Path_Step) GetKey() string {
	if x, ok := m.GetValue().(*Event_Path_Step_Key); ok {
		return x.Key
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event_Path_Step) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_Path_Step_OneofMarshaler, _Event_Path_Step_OneofUnmarshaler, _Event_Path_Step_OneofSizer, []interface{}{
		(*Event_Path_Step_Index)(nil),
		(*Event_Path_Step_Key)(nil),
	}
}

func _Event_Path_Step_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event_Path_Step)
	// value
	switch x := m.Value.(type) {
	case *Event_Path_Step_Index:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Index))
	case *Event_Path_Step_Key:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Key)
	case nil:
	default:
		return fmt.Errorf("Event_Path_Step.Value has unexpected type %T", x)
	}
	return nil
}

func _Event_Path_Step_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event_Path_Step)
	switch tag {
	case 1: // value.index
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Event_Path_Step_Index{int64(x)}
		return true, err
	case 2: // value.key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &Event_Path_Step_Key{x}
		return true, err
	default:
		return false, nil
	}
}

func _Event_Path_Step_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event_Path_Step)
	// value
	switch x := m.Value.(type) {
	case *Event_Path_Step_Index:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Index))
	case *Event_Path_Step_Key:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Key)))
		n += len(x.Key)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Execution struct {
	// The id of the execution.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The id of an ExecutionType.
	// The ExecutionType must be specified and cannot be changed.
	TypeId *int64 `protobuf:"varint,2,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	// The last known state of an execution.
	LastKnownState *Execution_State `protobuf:"varint,3,opt,name=last_known_state,json=lastKnownState,enum=ml_metadata.Execution_State" json:"last_known_state,omitempty"`
	// Properties of the Execution.
	// Properties must be specified in the ExecutionType.
	Properties map[string]*Value `protobuf:"bytes,4,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// User provided custom properties which are not defined by its type.
	CustomProperties     map[string]*Value `protobuf:"bytes,5,rep,name=custom_properties,json=customProperties" json:"custom_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Execution) Reset()         { *m = Execution{} }
func (m *Execution) String() string { return proto.CompactTextString(m) }
func (*Execution) ProtoMessage()    {}
func (*Execution) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{4}
}
func (m *Execution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Execution.Unmarshal(m, b)
}
func (m *Execution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Execution.Marshal(b, m, deterministic)
}
func (dst *Execution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Execution.Merge(dst, src)
}
func (m *Execution) XXX_Size() int {
	return xxx_messageInfo_Execution.Size(m)
}
func (m *Execution) XXX_DiscardUnknown() {
	xxx_messageInfo_Execution.DiscardUnknown(m)
}

var xxx_messageInfo_Execution proto.InternalMessageInfo

func (m *Execution) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Execution) GetTypeId() int64 {
	if m != nil && m.TypeId != nil {
		return *m.TypeId
	}
	return 0
}

func (m *Execution) GetLastKnownState() Execution_State {
	if m != nil && m.LastKnownState != nil {
		return *m.LastKnownState
	}
	return Execution_UNKNOWN
}

func (m *Execution) GetProperties() map[string]*Value {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Execution) GetCustomProperties() map[string]*Value {
	if m != nil {
		return m.CustomProperties
	}
	return nil
}

type ExecutionType struct {
	// The id of the type. 1-1 relationship between type names and IDs.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The name of the type.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// The schema of the type.
	// Properties are always optional in the execution.
	Properties map[string]PropertyType `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=ml_metadata.PropertyType"`
	// The ArtifactStructType of the input.
	// For example: {
	//     "dict":{
	//        "properties":{
	//          "schema":{
	//            "union_type":{
	//              "none":{},
	//              "simple":{...schema type...}
	//             },
	//          },
	//          "data":{
	//            "simple":{...data_type...}
	//          }
	//       }
	//     }
	// }
	// That would be an optional schema field with a required data field.
	InputType *ArtifactStructType `protobuf:"bytes,4,opt,name=input_type,json=inputType" json:"input_type,omitempty"`
	// The ArtifactStructType of the output.
	// For example {"simple":{...stats gen output type...}}
	OutputType           *ArtifactStructType `protobuf:"bytes,5,opt,name=output_type,json=outputType" json:"output_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ExecutionType) Reset()         { *m = ExecutionType{} }
func (m *ExecutionType) String() string { return proto.CompactTextString(m) }
func (*ExecutionType) ProtoMessage()    {}
func (*ExecutionType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{5}
}
func (m *ExecutionType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionType.Unmarshal(m, b)
}
func (m *ExecutionType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionType.Marshal(b, m, deterministic)
}
func (dst *ExecutionType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionType.Merge(dst, src)
}
func (m *ExecutionType) XXX_Size() int {
	return xxx_messageInfo_ExecutionType.Size(m)
}
func (m *ExecutionType) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionType.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionType proto.InternalMessageInfo

func (m *ExecutionType) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ExecutionType) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ExecutionType) GetProperties() map[string]PropertyType {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *ExecutionType) GetInputType() *ArtifactStructType {
	if m != nil {
		return m.InputType
	}
	return nil
}

func (m *ExecutionType) GetOutputType() *ArtifactStructType {
	if m != nil {
		return m.OutputType
	}
	return nil
}

// The type of an ArtifactStruct.
// An artifact struct type represents an infinite set of artifact structs.
// It can specify the input or output type of an ExecutionType.
// See the more specific types referenced in the message for more details.
type ArtifactStructType struct {
	// Types that are valid to be assigned to Kind:
	//	*ArtifactStructType_Simple
	//	*ArtifactStructType_UnionType
	//	*ArtifactStructType_Intersection
	//	*ArtifactStructType_List
	//	*ArtifactStructType_None
	//	*ArtifactStructType_Any
	//	*ArtifactStructType_Tuple
	//	*ArtifactStructType_Dict
	Kind                 isArtifactStructType_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ArtifactStructType) Reset()         { *m = ArtifactStructType{} }
func (m *ArtifactStructType) String() string { return proto.CompactTextString(m) }
func (*ArtifactStructType) ProtoMessage()    {}
func (*ArtifactStructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{6}
}
func (m *ArtifactStructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactStructType.Unmarshal(m, b)
}
func (m *ArtifactStructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactStructType.Marshal(b, m, deterministic)
}
func (dst *ArtifactStructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactStructType.Merge(dst, src)
}
func (m *ArtifactStructType) XXX_Size() int {
	return xxx_messageInfo_ArtifactStructType.Size(m)
}
func (m *ArtifactStructType) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactStructType.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactStructType proto.InternalMessageInfo

type isArtifactStructType_Kind interface {
	isArtifactStructType_Kind()
}

type ArtifactStructType_Simple struct {
	Simple *ArtifactType `protobuf:"bytes,1,opt,name=simple,oneof"`
}

type ArtifactStructType_UnionType struct {
	UnionType *UnionArtifactStructType `protobuf:"bytes,2,opt,name=union_type,json=unionType,oneof"`
}

type ArtifactStructType_Intersection struct {
	Intersection *IntersectionArtifactStructType `protobuf:"bytes,3,opt,name=intersection,oneof"`
}

type ArtifactStructType_List struct {
	List *ListArtifactStructType `protobuf:"bytes,4,opt,name=list,oneof"`
}

type ArtifactStructType_None struct {
	None *NoneArtifactStructType `protobuf:"bytes,5,opt,name=none,oneof"`
}

type ArtifactStructType_Any struct {
	Any *AnyArtifactStructType `protobuf:"bytes,6,opt,name=any,oneof"`
}

type ArtifactStructType_Tuple struct {
	Tuple *TupleArtifactStructType `protobuf:"bytes,7,opt,name=tuple,oneof"`
}

type ArtifactStructType_Dict struct {
	Dict *DictArtifactStructType `protobuf:"bytes,8,opt,name=dict,oneof"`
}

func (*ArtifactStructType_Simple) isArtifactStructType_Kind() {}

func (*ArtifactStructType_UnionType) isArtifactStructType_Kind() {}

func (*ArtifactStructType_Intersection) isArtifactStructType_Kind() {}

func (*ArtifactStructType_List) isArtifactStructType_Kind() {}

func (*ArtifactStructType_None) isArtifactStructType_Kind() {}

func (*ArtifactStructType_Any) isArtifactStructType_Kind() {}

func (*ArtifactStructType_Tuple) isArtifactStructType_Kind() {}

func (*ArtifactStructType_Dict) isArtifactStructType_Kind() {}

func (m *ArtifactStructType) GetKind() isArtifactStructType_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *ArtifactStructType) GetSimple() *ArtifactType {
	if x, ok := m.GetKind().(*ArtifactStructType_Simple); ok {
		return x.Simple
	}
	return nil
}

func (m *ArtifactStructType) GetUnionType() *UnionArtifactStructType {
	if x, ok := m.GetKind().(*ArtifactStructType_UnionType); ok {
		return x.UnionType
	}
	return nil
}

func (m *ArtifactStructType) GetIntersection() *IntersectionArtifactStructType {
	if x, ok := m.GetKind().(*ArtifactStructType_Intersection); ok {
		return x.Intersection
	}
	return nil
}

func (m *ArtifactStructType) GetList() *ListArtifactStructType {
	if x, ok := m.GetKind().(*ArtifactStructType_List); ok {
		return x.List
	}
	return nil
}

func (m *ArtifactStructType) GetNone() *NoneArtifactStructType {
	if x, ok := m.GetKind().(*ArtifactStructType_None); ok {
		return x.None
	}
	return nil
}

func (m *ArtifactStructType) GetAny() *AnyArtifactStructType {
	if x, ok := m.GetKind().(*ArtifactStructType_Any); ok {
		return x.Any
	}
	return nil
}

func (m *ArtifactStructType) GetTuple() *TupleArtifactStructType {
	if x, ok := m.GetKind().(*ArtifactStructType_Tuple); ok {
		return x.Tuple
	}
	return nil
}

func (m *ArtifactStructType) GetDict() *DictArtifactStructType {
	if x, ok := m.GetKind().(*ArtifactStructType_Dict); ok {
		return x.Dict
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ArtifactStructType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ArtifactStructType_OneofMarshaler, _ArtifactStructType_OneofUnmarshaler, _ArtifactStructType_OneofSizer, []interface{}{
		(*ArtifactStructType_Simple)(nil),
		(*ArtifactStructType_UnionType)(nil),
		(*ArtifactStructType_Intersection)(nil),
		(*ArtifactStructType_List)(nil),
		(*ArtifactStructType_None)(nil),
		(*ArtifactStructType_Any)(nil),
		(*ArtifactStructType_Tuple)(nil),
		(*ArtifactStructType_Dict)(nil),
	}
}

func _ArtifactStructType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ArtifactStructType)
	// kind
	switch x := m.Kind.(type) {
	case *ArtifactStructType_Simple:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Simple); err != nil {
			return err
		}
	case *ArtifactStructType_UnionType:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnionType); err != nil {
			return err
		}
	case *ArtifactStructType_Intersection:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Intersection); err != nil {
			return err
		}
	case *ArtifactStructType_List:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case *ArtifactStructType_None:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.None); err != nil {
			return err
		}
	case *ArtifactStructType_Any:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Any); err != nil {
			return err
		}
	case *ArtifactStructType_Tuple:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tuple); err != nil {
			return err
		}
	case *ArtifactStructType_Dict:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dict); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ArtifactStructType.Kind has unexpected type %T", x)
	}
	return nil
}

func _ArtifactStructType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ArtifactStructType)
	switch tag {
	case 1: // kind.simple
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ArtifactType)
		err := b.DecodeMessage(msg)
		m.Kind = &ArtifactStructType_Simple{msg}
		return true, err
	case 2: // kind.union_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnionArtifactStructType)
		err := b.DecodeMessage(msg)
		m.Kind = &ArtifactStructType_UnionType{msg}
		return true, err
	case 3: // kind.intersection
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IntersectionArtifactStructType)
		err := b.DecodeMessage(msg)
		m.Kind = &ArtifactStructType_Intersection{msg}
		return true, err
	case 4: // kind.list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListArtifactStructType)
		err := b.DecodeMessage(msg)
		m.Kind = &ArtifactStructType_List{msg}
		return true, err
	case 5: // kind.none
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NoneArtifactStructType)
		err := b.DecodeMessage(msg)
		m.Kind = &ArtifactStructType_None{msg}
		return true, err
	case 6: // kind.any
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AnyArtifactStructType)
		err := b.DecodeMessage(msg)
		m.Kind = &ArtifactStructType_Any{msg}
		return true, err
	case 7: // kind.tuple
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TupleArtifactStructType)
		err := b.DecodeMessage(msg)
		m.Kind = &ArtifactStructType_Tuple{msg}
		return true, err
	case 8: // kind.dict
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DictArtifactStructType)
		err := b.DecodeMessage(msg)
		m.Kind = &ArtifactStructType_Dict{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ArtifactStructType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ArtifactStructType)
	// kind
	switch x := m.Kind.(type) {
	case *ArtifactStructType_Simple:
		s := proto.Size(x.Simple)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactStructType_UnionType:
		s := proto.Size(x.UnionType)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactStructType_Intersection:
		s := proto.Size(x.Intersection)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactStructType_List:
		s := proto.Size(x.List)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactStructType_None:
		s := proto.Size(x.None)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactStructType_Any:
		s := proto.Size(x.Any)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactStructType_Tuple:
		s := proto.Size(x.Tuple)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ArtifactStructType_Dict:
		s := proto.Size(x.Dict)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Represents a union of types.
type UnionArtifactStructType struct {
	// An artifact struct matches this type if it matches any of the candidates.
	// If candidates is empty, this is a bottom type (matches no artifacts).
	Candidates           []*ArtifactStructType `protobuf:"bytes,1,rep,name=candidates" json:"candidates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UnionArtifactStructType) Reset()         { *m = UnionArtifactStructType{} }
func (m *UnionArtifactStructType) String() string { return proto.CompactTextString(m) }
func (*UnionArtifactStructType) ProtoMessage()    {}
func (*UnionArtifactStructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{7}
}
func (m *UnionArtifactStructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnionArtifactStructType.Unmarshal(m, b)
}
func (m *UnionArtifactStructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnionArtifactStructType.Marshal(b, m, deterministic)
}
func (dst *UnionArtifactStructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnionArtifactStructType.Merge(dst, src)
}
func (m *UnionArtifactStructType) XXX_Size() int {
	return xxx_messageInfo_UnionArtifactStructType.Size(m)
}
func (m *UnionArtifactStructType) XXX_DiscardUnknown() {
	xxx_messageInfo_UnionArtifactStructType.DiscardUnknown(m)
}

var xxx_messageInfo_UnionArtifactStructType proto.InternalMessageInfo

func (m *UnionArtifactStructType) GetCandidates() []*ArtifactStructType {
	if m != nil {
		return m.Candidates
	}
	return nil
}

// A member of this type must satisfy all constraints.
// This primarily useful not as an end-user type, but something calculated
// as an intermediate type in the system.
//
// For example, suppose you have a method:
// def infer_my_input_type(a): # try to infer the input type of this method.
//   use_in_method_x(a) # with input type x_input
//   use_in_method_y(a) # with input type y_input
//
// Given this information, you know that infer_my_input_type has
// type {"intersection":{"constraints":[x_input, y_input]}}.
//
// IntersectionArtifactStructType intersection_type = {"constraints":[
//     {"dict":{"properties":{"schema":{"any":{}}},
//              "extra_properties":{"any":{}}}},
//     {"dict":{"properties":{"data":{"any":{}}},
//              "extra_properties":{"any":{}}}}]}
// Since the first constraint requires the dictionary to have a schema
// property, and the second constraint requires it to have a data property, this
// is equivalent to:
// ArtifactStructType other_type =
//      {"dict":{"properties":{"schema":{"any":{}},"data":{"any":{}}}},
//       "extra_properties":{"any":{}}}
//
type IntersectionArtifactStructType struct {
	Constraints          []*ArtifactStructType `protobuf:"bytes,1,rep,name=constraints" json:"constraints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IntersectionArtifactStructType) Reset()         { *m = IntersectionArtifactStructType{} }
func (m *IntersectionArtifactStructType) String() string { return proto.CompactTextString(m) }
func (*IntersectionArtifactStructType) ProtoMessage()    {}
func (*IntersectionArtifactStructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{8}
}
func (m *IntersectionArtifactStructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntersectionArtifactStructType.Unmarshal(m, b)
}
func (m *IntersectionArtifactStructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntersectionArtifactStructType.Marshal(b, m, deterministic)
}
func (dst *IntersectionArtifactStructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntersectionArtifactStructType.Merge(dst, src)
}
func (m *IntersectionArtifactStructType) XXX_Size() int {
	return xxx_messageInfo_IntersectionArtifactStructType.Size(m)
}
func (m *IntersectionArtifactStructType) XXX_DiscardUnknown() {
	xxx_messageInfo_IntersectionArtifactStructType.DiscardUnknown(m)
}

var xxx_messageInfo_IntersectionArtifactStructType proto.InternalMessageInfo

func (m *IntersectionArtifactStructType) GetConstraints() []*ArtifactStructType {
	if m != nil {
		return m.Constraints
	}
	return nil
}

// Represents an ArtifactStruct list type with homogeneous elements.
type ListArtifactStructType struct {
	// Every entry in the list must be of this type.
	// Note: if this type is Any, then the list can have arbitrary elements.
	Element              *ArtifactStructType `protobuf:"bytes,1,opt,name=element" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListArtifactStructType) Reset()         { *m = ListArtifactStructType{} }
func (m *ListArtifactStructType) String() string { return proto.CompactTextString(m) }
func (*ListArtifactStructType) ProtoMessage()    {}
func (*ListArtifactStructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{9}
}
func (m *ListArtifactStructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactStructType.Unmarshal(m, b)
}
func (m *ListArtifactStructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactStructType.Marshal(b, m, deterministic)
}
func (dst *ListArtifactStructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactStructType.Merge(dst, src)
}
func (m *ListArtifactStructType) XXX_Size() int {
	return xxx_messageInfo_ListArtifactStructType.Size(m)
}
func (m *ListArtifactStructType) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactStructType.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactStructType proto.InternalMessageInfo

func (m *ListArtifactStructType) GetElement() *ArtifactStructType {
	if m != nil {
		return m.Element
	}
	return nil
}

// The only member of this type is a None artifact.
// Note: ArtifactStruct{} is a None artifact.
// This can represent an execution that has no outputs (or inputs),
// or can be part of a UnionArtifactStructType to represent an optional
// input.
// For example, StatsGen has an "optional" schema input.
// A practical example of this is:
// stats_gen_type = {
//     "dict":{
//        "properties":{
//          "schema":{
//            "union_type":{
//              "none":{},
//              "simple":{...schema type...}
//             },
//          },
//          "data":{
//            "simple":{...data_type...}
//          }
//       }
//     }
// };
type NoneArtifactStructType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoneArtifactStructType) Reset()         { *m = NoneArtifactStructType{} }
func (m *NoneArtifactStructType) String() string { return proto.CompactTextString(m) }
func (*NoneArtifactStructType) ProtoMessage()    {}
func (*NoneArtifactStructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{10}
}
func (m *NoneArtifactStructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoneArtifactStructType.Unmarshal(m, b)
}
func (m *NoneArtifactStructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoneArtifactStructType.Marshal(b, m, deterministic)
}
func (dst *NoneArtifactStructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoneArtifactStructType.Merge(dst, src)
}
func (m *NoneArtifactStructType) XXX_Size() int {
	return xxx_messageInfo_NoneArtifactStructType.Size(m)
}
func (m *NoneArtifactStructType) XXX_DiscardUnknown() {
	xxx_messageInfo_NoneArtifactStructType.DiscardUnknown(m)
}

var xxx_messageInfo_NoneArtifactStructType proto.InternalMessageInfo

// Every ArtifactStruct is a member of this type.
type AnyArtifactStructType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnyArtifactStructType) Reset()         { *m = AnyArtifactStructType{} }
func (m *AnyArtifactStructType) String() string { return proto.CompactTextString(m) }
func (*AnyArtifactStructType) ProtoMessage()    {}
func (*AnyArtifactStructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{11}
}
func (m *AnyArtifactStructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnyArtifactStructType.Unmarshal(m, b)
}
func (m *AnyArtifactStructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnyArtifactStructType.Marshal(b, m, deterministic)
}
func (dst *AnyArtifactStructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnyArtifactStructType.Merge(dst, src)
}
func (m *AnyArtifactStructType) XXX_Size() int {
	return xxx_messageInfo_AnyArtifactStructType.Size(m)
}
func (m *AnyArtifactStructType) XXX_DiscardUnknown() {
	xxx_messageInfo_AnyArtifactStructType.DiscardUnknown(m)
}

var xxx_messageInfo_AnyArtifactStructType proto.InternalMessageInfo

// An ordered list of heterogenous artifact structs.
// The length of the list is fixed.
// Each position in the list can have a different type.
type TupleArtifactStructType struct {
	Elements             []*ArtifactStructType `protobuf:"bytes,1,rep,name=elements" json:"elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TupleArtifactStructType) Reset()         { *m = TupleArtifactStructType{} }
func (m *TupleArtifactStructType) String() string { return proto.CompactTextString(m) }
func (*TupleArtifactStructType) ProtoMessage()    {}
func (*TupleArtifactStructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{12}
}
func (m *TupleArtifactStructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TupleArtifactStructType.Unmarshal(m, b)
}
func (m *TupleArtifactStructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TupleArtifactStructType.Marshal(b, m, deterministic)
}
func (dst *TupleArtifactStructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TupleArtifactStructType.Merge(dst, src)
}
func (m *TupleArtifactStructType) XXX_Size() int {
	return xxx_messageInfo_TupleArtifactStructType.Size(m)
}
func (m *TupleArtifactStructType) XXX_DiscardUnknown() {
	xxx_messageInfo_TupleArtifactStructType.DiscardUnknown(m)
}

var xxx_messageInfo_TupleArtifactStructType proto.InternalMessageInfo

func (m *TupleArtifactStructType) GetElements() []*ArtifactStructType {
	if m != nil {
		return m.Elements
	}
	return nil
}

// A artifact struct type that represents a record or struct-like dictionary.
// ArtifactStruct would be map (i.e. ArtifactStructMap)
type DictArtifactStructType struct {
	// Underlying properties for the type.
	Properties map[string]*ArtifactStructType `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// If true, then if properties["foo"] can be None, then that key is not
	// required.
	NoneTypeNotRequired *bool `protobuf:"varint,2,opt,name=none_type_not_required,json=noneTypeNotRequired" json:"none_type_not_required,omitempty"`
	// Extra keys are allowed that are not specified in properties. These
	// keys must have the type specified below.
	// If this is not specified, then extra properties are not allowed.
	ExtraPropertiesType  *ArtifactStructType `protobuf:"bytes,3,opt,name=extra_properties_type,json=extraPropertiesType" json:"extra_properties_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DictArtifactStructType) Reset()         { *m = DictArtifactStructType{} }
func (m *DictArtifactStructType) String() string { return proto.CompactTextString(m) }
func (*DictArtifactStructType) ProtoMessage()    {}
func (*DictArtifactStructType) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{13}
}
func (m *DictArtifactStructType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DictArtifactStructType.Unmarshal(m, b)
}
func (m *DictArtifactStructType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DictArtifactStructType.Marshal(b, m, deterministic)
}
func (dst *DictArtifactStructType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DictArtifactStructType.Merge(dst, src)
}
func (m *DictArtifactStructType) XXX_Size() int {
	return xxx_messageInfo_DictArtifactStructType.Size(m)
}
func (m *DictArtifactStructType) XXX_DiscardUnknown() {
	xxx_messageInfo_DictArtifactStructType.DiscardUnknown(m)
}

var xxx_messageInfo_DictArtifactStructType proto.InternalMessageInfo

func (m *DictArtifactStructType) GetProperties() map[string]*ArtifactStructType {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *DictArtifactStructType) GetNoneTypeNotRequired() bool {
	if m != nil && m.NoneTypeNotRequired != nil {
		return *m.NoneTypeNotRequired
	}
	return false
}

func (m *DictArtifactStructType) GetExtraPropertiesType() *ArtifactStructType {
	if m != nil {
		return m.ExtraPropertiesType
	}
	return nil
}

// Configuration for a "fake" database.
// This database is an in-memory SQLite database that lives only as
// long as the associated object lives.
type FakeDatabaseConfig struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FakeDatabaseConfig) Reset()         { *m = FakeDatabaseConfig{} }
func (m *FakeDatabaseConfig) String() string { return proto.CompactTextString(m) }
func (*FakeDatabaseConfig) ProtoMessage()    {}
func (*FakeDatabaseConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{14}
}
func (m *FakeDatabaseConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeDatabaseConfig.Unmarshal(m, b)
}
func (m *FakeDatabaseConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeDatabaseConfig.Marshal(b, m, deterministic)
}
func (dst *FakeDatabaseConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeDatabaseConfig.Merge(dst, src)
}
func (m *FakeDatabaseConfig) XXX_Size() int {
	return xxx_messageInfo_FakeDatabaseConfig.Size(m)
}
func (m *FakeDatabaseConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeDatabaseConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FakeDatabaseConfig proto.InternalMessageInfo

type MySQLDatabaseConfig struct {
	// The hostname or IP address of the MYSQL server. Must be specified.
	// Currently a replicated MYSQL backend is not supported.
	Host *string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	// The TCP Port number that the MYSQL server accepts connections on.
	// If unspecified, the default MYSQL port (3306) is used.
	Port *uint32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	// The database to connect to. Must be specified.
	// After connecting to the MYSQL server, this database is created if not
	// already present.
	// All queries after Connect() are assumed to be for this database.
	Database *string `protobuf:"bytes,3,opt,name=database" json:"database,omitempty"`
	// The MYSQL login id. If empty, the current user is assumed.
	User *string `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	// The password to use for `user`. If empty, only MYSQL user ids that don't
	// have a password set are allowed to connect.
	Password             *string  `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MySQLDatabaseConfig) Reset()         { *m = MySQLDatabaseConfig{} }
func (m *MySQLDatabaseConfig) String() string { return proto.CompactTextString(m) }
func (*MySQLDatabaseConfig) ProtoMessage()    {}
func (*MySQLDatabaseConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{15}
}
func (m *MySQLDatabaseConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MySQLDatabaseConfig.Unmarshal(m, b)
}
func (m *MySQLDatabaseConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MySQLDatabaseConfig.Marshal(b, m, deterministic)
}
func (dst *MySQLDatabaseConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MySQLDatabaseConfig.Merge(dst, src)
}
func (m *MySQLDatabaseConfig) XXX_Size() int {
	return xxx_messageInfo_MySQLDatabaseConfig.Size(m)
}
func (m *MySQLDatabaseConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MySQLDatabaseConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MySQLDatabaseConfig proto.InternalMessageInfo

func (m *MySQLDatabaseConfig) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *MySQLDatabaseConfig) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *MySQLDatabaseConfig) GetDatabase() string {
	if m != nil && m.Database != nil {
		return *m.Database
	}
	return ""
}

func (m *MySQLDatabaseConfig) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *MySQLDatabaseConfig) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

// A config contains the parameters when using with SqliteMetadatSource.
type SqliteMetadataSourceConfig struct {
	// A uri specifying Sqlite3 database filename, for example:
	//
	//   file:some_sqlite3_file_in_local_dir.db
	//   file:///home/username/some_sqlite3_file.db
	//
	// see https://www.sqlite.org/c3ref/open.html for model details
	//
	// If not given, a in-memory sqlite3 database is used, and destroyed when
	// disconnecting the metadata source.
	FilenameUri *string `protobuf:"bytes,1,opt,name=filename_uri,json=filenameUri" json:"filename_uri,omitempty"`
	// A flag specifying the connection mode. If not given, default connection
	// mode is set to READWRITE_OPENCREATE.
	ConnectionMode       *SqliteMetadataSourceConfig_ConnectionMode `protobuf:"varint,2,opt,name=connection_mode,json=connectionMode,enum=ml_metadata.SqliteMetadataSourceConfig_ConnectionMode" json:"connection_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *SqliteMetadataSourceConfig) Reset()         { *m = SqliteMetadataSourceConfig{} }
func (m *SqliteMetadataSourceConfig) String() string { return proto.CompactTextString(m) }
func (*SqliteMetadataSourceConfig) ProtoMessage()    {}
func (*SqliteMetadataSourceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{16}
}
func (m *SqliteMetadataSourceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SqliteMetadataSourceConfig.Unmarshal(m, b)
}
func (m *SqliteMetadataSourceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SqliteMetadataSourceConfig.Marshal(b, m, deterministic)
}
func (dst *SqliteMetadataSourceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqliteMetadataSourceConfig.Merge(dst, src)
}
func (m *SqliteMetadataSourceConfig) XXX_Size() int {
	return xxx_messageInfo_SqliteMetadataSourceConfig.Size(m)
}
func (m *SqliteMetadataSourceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SqliteMetadataSourceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SqliteMetadataSourceConfig proto.InternalMessageInfo

func (m *SqliteMetadataSourceConfig) GetFilenameUri() string {
	if m != nil && m.FilenameUri != nil {
		return *m.FilenameUri
	}
	return ""
}

func (m *SqliteMetadataSourceConfig) GetConnectionMode() SqliteMetadataSourceConfig_ConnectionMode {
	if m != nil && m.ConnectionMode != nil {
		return *m.ConnectionMode
	}
	return SqliteMetadataSourceConfig_UNKNOWN
}

// Configuration for a new connection.
type ConnectionConfig struct {
	// Types that are valid to be assigned to Config:
	//	*ConnectionConfig_FakeDatabase
	//	*ConnectionConfig_Mysql
	//	*ConnectionConfig_Sqlite
	Config               isConnectionConfig_Config `protobuf_oneof:"config"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ConnectionConfig) Reset()         { *m = ConnectionConfig{} }
func (m *ConnectionConfig) String() string { return proto.CompactTextString(m) }
func (*ConnectionConfig) ProtoMessage()    {}
func (*ConnectionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{17}
}
func (m *ConnectionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionConfig.Unmarshal(m, b)
}
func (m *ConnectionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionConfig.Marshal(b, m, deterministic)
}
func (dst *ConnectionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionConfig.Merge(dst, src)
}
func (m *ConnectionConfig) XXX_Size() int {
	return xxx_messageInfo_ConnectionConfig.Size(m)
}
func (m *ConnectionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionConfig proto.InternalMessageInfo

type isConnectionConfig_Config interface {
	isConnectionConfig_Config()
}

type ConnectionConfig_FakeDatabase struct {
	FakeDatabase *FakeDatabaseConfig `protobuf:"bytes,1,opt,name=fake_database,json=fakeDatabase,oneof"`
}

type ConnectionConfig_Mysql struct {
	Mysql *MySQLDatabaseConfig `protobuf:"bytes,2,opt,name=mysql,oneof"`
}

type ConnectionConfig_Sqlite struct {
	Sqlite *SqliteMetadataSourceConfig `protobuf:"bytes,3,opt,name=sqlite,oneof"`
}

func (*ConnectionConfig_FakeDatabase) isConnectionConfig_Config() {}

func (*ConnectionConfig_Mysql) isConnectionConfig_Config() {}

func (*ConnectionConfig_Sqlite) isConnectionConfig_Config() {}

func (m *ConnectionConfig) GetConfig() isConnectionConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ConnectionConfig) GetFakeDatabase() *FakeDatabaseConfig {
	if x, ok := m.GetConfig().(*ConnectionConfig_FakeDatabase); ok {
		return x.FakeDatabase
	}
	return nil
}

func (m *ConnectionConfig) GetMysql() *MySQLDatabaseConfig {
	if x, ok := m.GetConfig().(*ConnectionConfig_Mysql); ok {
		return x.Mysql
	}
	return nil
}

func (m *ConnectionConfig) GetSqlite() *SqliteMetadataSourceConfig {
	if x, ok := m.GetConfig().(*ConnectionConfig_Sqlite); ok {
		return x.Sqlite
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ConnectionConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ConnectionConfig_OneofMarshaler, _ConnectionConfig_OneofUnmarshaler, _ConnectionConfig_OneofSizer, []interface{}{
		(*ConnectionConfig_FakeDatabase)(nil),
		(*ConnectionConfig_Mysql)(nil),
		(*ConnectionConfig_Sqlite)(nil),
	}
}

func _ConnectionConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ConnectionConfig)
	// config
	switch x := m.Config.(type) {
	case *ConnectionConfig_FakeDatabase:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FakeDatabase); err != nil {
			return err
		}
	case *ConnectionConfig_Mysql:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mysql); err != nil {
			return err
		}
	case *ConnectionConfig_Sqlite:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sqlite); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ConnectionConfig.Config has unexpected type %T", x)
	}
	return nil
}

func _ConnectionConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ConnectionConfig)
	switch tag {
	case 1: // config.fake_database
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FakeDatabaseConfig)
		err := b.DecodeMessage(msg)
		m.Config = &ConnectionConfig_FakeDatabase{msg}
		return true, err
	case 2: // config.mysql
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MySQLDatabaseConfig)
		err := b.DecodeMessage(msg)
		m.Config = &ConnectionConfig_Mysql{msg}
		return true, err
	case 3: // config.sqlite
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SqliteMetadataSourceConfig)
		err := b.DecodeMessage(msg)
		m.Config = &ConnectionConfig_Sqlite{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ConnectionConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ConnectionConfig)
	// config
	switch x := m.Config.(type) {
	case *ConnectionConfig_FakeDatabase:
		s := proto.Size(x.FakeDatabase)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConnectionConfig_Mysql:
		s := proto.Size(x.Mysql)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConnectionConfig_Sqlite:
		s := proto.Size(x.Sqlite)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Configuration for the gRPC metadata store server.
type MetadataStoreServerConfig struct {
	// Configuration to connect the metadata source backend.
	ConnectionConfig *ConnectionConfig `protobuf:"bytes,1,opt,name=connection_config,json=connectionConfig" json:"connection_config,omitempty"`
	// Configuration for a secure gRPC channel.
	// If not given, insecure connection is used.
	SslConfig            *MetadataStoreServerConfig_SSLConfig `protobuf:"bytes,2,opt,name=ssl_config,json=sslConfig" json:"ssl_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *MetadataStoreServerConfig) Reset()         { *m = MetadataStoreServerConfig{} }
func (m *MetadataStoreServerConfig) String() string { return proto.CompactTextString(m) }
func (*MetadataStoreServerConfig) ProtoMessage()    {}
func (*MetadataStoreServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{18}
}
func (m *MetadataStoreServerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataStoreServerConfig.Unmarshal(m, b)
}
func (m *MetadataStoreServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataStoreServerConfig.Marshal(b, m, deterministic)
}
func (dst *MetadataStoreServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataStoreServerConfig.Merge(dst, src)
}
func (m *MetadataStoreServerConfig) XXX_Size() int {
	return xxx_messageInfo_MetadataStoreServerConfig.Size(m)
}
func (m *MetadataStoreServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataStoreServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataStoreServerConfig proto.InternalMessageInfo

func (m *MetadataStoreServerConfig) GetConnectionConfig() *ConnectionConfig {
	if m != nil {
		return m.ConnectionConfig
	}
	return nil
}

func (m *MetadataStoreServerConfig) GetSslConfig() *MetadataStoreServerConfig_SSLConfig {
	if m != nil {
		return m.SslConfig
	}
	return nil
}

type MetadataStoreServerConfig_SSLConfig struct {
	// Private server key for SSL
	ServerKey *string `protobuf:"bytes,1,opt,name=server_key,json=serverKey" json:"server_key,omitempty"`
	// Public server certificate
	ServerCert *string `protobuf:"bytes,2,opt,name=server_cert,json=serverCert" json:"server_cert,omitempty"`
	// Custom certificate authority
	CustomCa *string `protobuf:"bytes,3,opt,name=custom_ca,json=customCa" json:"custom_ca,omitempty"`
	// Valid client certificate required?
	ClientVerify         *bool    `protobuf:"varint,4,opt,name=client_verify,json=clientVerify" json:"client_verify,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetadataStoreServerConfig_SSLConfig) Reset()         { *m = MetadataStoreServerConfig_SSLConfig{} }
func (m *MetadataStoreServerConfig_SSLConfig) String() string { return proto.CompactTextString(m) }
func (*MetadataStoreServerConfig_SSLConfig) ProtoMessage()    {}
func (*MetadataStoreServerConfig_SSLConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_store_71c68eb85106423e, []int{18, 0}
}
func (m *MetadataStoreServerConfig_SSLConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataStoreServerConfig_SSLConfig.Unmarshal(m, b)
}
func (m *MetadataStoreServerConfig_SSLConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataStoreServerConfig_SSLConfig.Marshal(b, m, deterministic)
}
func (dst *MetadataStoreServerConfig_SSLConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataStoreServerConfig_SSLConfig.Merge(dst, src)
}
func (m *MetadataStoreServerConfig_SSLConfig) XXX_Size() int {
	return xxx_messageInfo_MetadataStoreServerConfig_SSLConfig.Size(m)
}
func (m *MetadataStoreServerConfig_SSLConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataStoreServerConfig_SSLConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataStoreServerConfig_SSLConfig proto.InternalMessageInfo

func (m *MetadataStoreServerConfig_SSLConfig) GetServerKey() string {
	if m != nil && m.ServerKey != nil {
		return *m.ServerKey
	}
	return ""
}

func (m *MetadataStoreServerConfig_SSLConfig) GetServerCert() string {
	if m != nil && m.ServerCert != nil {
		return *m.ServerCert
	}
	return ""
}

func (m *MetadataStoreServerConfig_SSLConfig) GetCustomCa() string {
	if m != nil && m.CustomCa != nil {
		return *m.CustomCa
	}
	return ""
}

func (m *MetadataStoreServerConfig_SSLConfig) GetClientVerify() bool {
	if m != nil && m.ClientVerify != nil {
		return *m.ClientVerify
	}
	return false
}

func init() {
	proto.RegisterType((*Value)(nil), "ml_metadata.Value")
	proto.RegisterType((*Artifact)(nil), "ml_metadata.Artifact")
	proto.RegisterMapType((map[string]*Value)(nil), "ml_metadata.Artifact.CustomPropertiesEntry")
	proto.RegisterMapType((map[string]*Value)(nil), "ml_metadata.Artifact.PropertiesEntry")
	proto.RegisterType((*ArtifactType)(nil), "ml_metadata.ArtifactType")
	proto.RegisterMapType((map[string]PropertyType)(nil), "ml_metadata.ArtifactType.PropertiesEntry")
	proto.RegisterType((*Event)(nil), "ml_metadata.Event")
	proto.RegisterType((*Event_Path)(nil), "ml_metadata.Event.Path")
	proto.RegisterType((*Event_Path_Step)(nil), "ml_metadata.Event.Path.Step")
	proto.RegisterType((*Execution)(nil), "ml_metadata.Execution")
	proto.RegisterMapType((map[string]*Value)(nil), "ml_metadata.Execution.CustomPropertiesEntry")
	proto.RegisterMapType((map[string]*Value)(nil), "ml_metadata.Execution.PropertiesEntry")
	proto.RegisterType((*ExecutionType)(nil), "ml_metadata.ExecutionType")
	proto.RegisterMapType((map[string]PropertyType)(nil), "ml_metadata.ExecutionType.PropertiesEntry")
	proto.RegisterType((*ArtifactStructType)(nil), "ml_metadata.ArtifactStructType")
	proto.RegisterType((*UnionArtifactStructType)(nil), "ml_metadata.UnionArtifactStructType")
	proto.RegisterType((*IntersectionArtifactStructType)(nil), "ml_metadata.IntersectionArtifactStructType")
	proto.RegisterType((*ListArtifactStructType)(nil), "ml_metadata.ListArtifactStructType")
	proto.RegisterType((*NoneArtifactStructType)(nil), "ml_metadata.NoneArtifactStructType")
	proto.RegisterType((*AnyArtifactStructType)(nil), "ml_metadata.AnyArtifactStructType")
	proto.RegisterType((*TupleArtifactStructType)(nil), "ml_metadata.TupleArtifactStructType")
	proto.RegisterType((*DictArtifactStructType)(nil), "ml_metadata.DictArtifactStructType")
	proto.RegisterMapType((map[string]*ArtifactStructType)(nil), "ml_metadata.DictArtifactStructType.PropertiesEntry")
	proto.RegisterType((*FakeDatabaseConfig)(nil), "ml_metadata.FakeDatabaseConfig")
	proto.RegisterType((*MySQLDatabaseConfig)(nil), "ml_metadata.MySQLDatabaseConfig")
	proto.RegisterType((*SqliteMetadataSourceConfig)(nil), "ml_metadata.SqliteMetadataSourceConfig")
	proto.RegisterType((*ConnectionConfig)(nil), "ml_metadata.ConnectionConfig")
	proto.RegisterType((*MetadataStoreServerConfig)(nil), "ml_metadata.MetadataStoreServerConfig")
	proto.RegisterType((*MetadataStoreServerConfig_SSLConfig)(nil), "ml_metadata.MetadataStoreServerConfig.SSLConfig")
	proto.RegisterEnum("ml_metadata.PropertyType", PropertyType_name, PropertyType_value)
	proto.RegisterEnum("ml_metadata.Event_Type", Event_Type_name, Event_Type_value)
	proto.RegisterEnum("ml_metadata.Execution_State", Execution_State_name, Execution_State_value)
	proto.RegisterEnum("ml_metadata.SqliteMetadataSourceConfig_ConnectionMode", SqliteMetadataSourceConfig_ConnectionMode_name, SqliteMetadataSourceConfig_ConnectionMode_value)
}

func init() {
	proto.RegisterFile("ml_metadata/proto/metadata_store.proto", fileDescriptor_metadata_store_71c68eb85106423e)
}

var fileDescriptor_metadata_store_71c68eb85106423e = []byte{
	// 1520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x57, 0xdf, 0x72, 0xd3, 0xc6,
	0x1a, 0x8f, 0xff, 0xc6, 0xfa, 0xec, 0x04, 0xb3, 0x81, 0xc4, 0xf8, 0x1c, 0x0e, 0x41, 0x9c, 0xc3,
	0xc9, 0x81, 0x33, 0xe6, 0x4c, 0x98, 0xc3, 0x40, 0x61, 0xda, 0x26, 0xb6, 0xd3, 0x18, 0x1c, 0x27,
	0xac, 0x1c, 0x02, 0xbd, 0xa8, 0x46, 0x48, 0x1b, 0xb2, 0x13, 0x79, 0x65, 0xa4, 0x75, 0xc0, 0x8f,
	0xd0, 0x8b, 0x5e, 0x94, 0xf7, 0xe8, 0x7b, 0xf4, 0x0d, 0xb8, 0xe8, 0x55, 0x5f, 0xa2, 0xd7, 0x9d,
	0xdd, 0x95, 0x15, 0x29, 0x91, 0x13, 0xcf, 0x74, 0x7a, 0xd3, 0xbb, 0xdd, 0x6f, 0xbf, 0xdf, 0xf7,
	0x7f, 0x7f, 0x2b, 0xc1, 0xdd, 0x81, 0x6b, 0x0e, 0x08, 0xb7, 0x1c, 0x8b, 0x5b, 0x0f, 0x86, 0xbe,
	0xc7, 0xbd, 0x07, 0x93, 0xad, 0x19, 0x70, 0xcf, 0x27, 0x0d, 0x29, 0x44, 0xe5, 0x98, 0x9e, 0x3e,
	0x86, 0xc2, 0x2b, 0xcb, 0x1d, 0x11, 0x74, 0x13, 0x34, 0xca, 0xb8, 0x79, 0x22, 0x36, 0xb5, 0xcc,
	0x6a, 0x66, 0x2d, 0xb7, 0x3d, 0x87, 0x4b, 0x94, 0x71, 0x75, 0x7c, 0x07, 0x2a, 0x8e, 0x37, 0x7a,
	0xeb, 0x92, 0x50, 0x23, 0xbb, 0x9a, 0x59, 0xcb, 0x6c, 0xcf, 0xe1, 0xb2, 0x92, 0x46, 0x4a, 0x01,
	0xf7, 0x29, 0x7b, 0x17, 0x2a, 0xe5, 0x56, 0x33, 0x6b, 0x9a, 0x50, 0x52, 0x52, 0xa9, 0xb4, 0x39,
	0x0f, 0x05, 0x79, 0xaa, 0x7f, 0xca, 0x41, 0x69, 0xc3, 0xe7, 0xf4, 0xd0, 0xb2, 0x39, 0x5a, 0x84,
	0x2c, 0x75, 0x94, 0x5f, 0x9c, 0xa5, 0x0e, 0x5a, 0x81, 0x79, 0x3e, 0x1e, 0x12, 0x93, 0x3a, 0xd2,
	0x55, 0x0e, 0x17, 0xc5, 0xb6, 0xe3, 0xa0, 0x2a, 0xe4, 0x46, 0x3e, 0x55, 0xa6, 0xb1, 0x58, 0xa2,
	0x36, 0xc0, 0xd0, 0xf7, 0x86, 0xc4, 0xe7, 0x94, 0x04, 0xb5, 0xfc, 0x6a, 0x6e, 0xad, 0xbc, 0xfe,
	0xaf, 0x46, 0x2c, 0xc9, 0xc6, 0xc4, 0x4b, 0x63, 0x2f, 0xd2, 0x6b, 0x33, 0xee, 0x8f, 0x71, 0x0c,
	0x88, 0x5e, 0xc3, 0x55, 0x7b, 0x14, 0x70, 0x6f, 0x60, 0xc6, 0xac, 0x15, 0xa4, 0xb5, 0xfb, 0xe9,
	0xd6, 0x9a, 0x52, 0xfd, 0xac, 0xcd, 0xaa, 0x7d, 0x46, 0x5c, 0x7f, 0x09, 0x57, 0xce, 0x28, 0x89,
	0x2c, 0x8e, 0xc9, 0x58, 0xe6, 0xab, 0x61, 0xb1, 0x44, 0x6b, 0x61, 0x59, 0x64, 0xba, 0xe5, 0x75,
	0x94, 0x70, 0x29, 0x2b, 0x87, 0x95, 0xc2, 0x17, 0xd9, 0xc7, 0x99, 0xfa, 0x01, 0x5c, 0x4f, 0xf5,
	0xfe, 0x47, 0x0d, 0xeb, 0x9f, 0x33, 0x50, 0x99, 0x24, 0xd8, 0x1f, 0x0f, 0xc9, 0xb9, 0xc6, 0x20,
	0xc8, 0x33, 0x6b, 0xa0, 0xac, 0x69, 0x58, 0xae, 0x51, 0x27, 0xd1, 0x81, 0x9c, 0xac, 0xd9, 0x7f,
	0x52, 0x6b, 0x26, 0x4c, 0x5e, 0xd4, 0x85, 0xfa, 0xeb, 0x59, 0x6a, 0xf5, 0x20, 0x9e, 0xd2, 0xe2,
	0xfa, 0x8d, 0x84, 0xab, 0x10, 0x3e, 0x16, 0xae, 0xe2, 0x99, 0xfd, 0x94, 0x83, 0x42, 0xfb, 0x84,
	0x30, 0x8e, 0x6e, 0x41, 0xd9, 0x0a, 0xe3, 0x31, 0xa3, 0xdc, 0x60, 0x22, 0xea, 0x38, 0xe8, 0x36,
	0x54, 0xc8, 0x47, 0x62, 0x8f, 0x38, 0xf5, 0xd8, 0xe9, 0x04, 0x96, 0x23, 0x59, 0xc7, 0x41, 0xf7,
	0x21, 0x3f, 0xb4, 0xf8, 0x91, 0x9c, 0xc3, 0xf2, 0xfa, 0x4a, 0x22, 0x02, 0xe9, 0xa5, 0xb1, 0x67,
	0xf1, 0x23, 0x2c, 0x95, 0x84, 0xb2, 0x98, 0xde, 0x5a, 0x5e, 0x86, 0x9b, 0xa6, 0x2c, 0x83, 0x95,
	0x4a, 0xe8, 0x31, 0xd4, 0x06, 0xd4, 0x75, 0x69, 0x40, 0x6c, 0x8f, 0x39, 0x81, 0x19, 0x50, 0x66,
	0x13, 0x93, 0x0c, 0x3d, 0xfb, 0xa8, 0x56, 0x90, 0x81, 0x2c, 0xc7, 0xcf, 0x0d, 0x71, 0xdc, 0x16,
	0xa7, 0xf5, 0x0f, 0x90, 0x17, 0x4e, 0xd1, 0x3a, 0x14, 0x02, 0x4e, 0x86, 0x41, 0x2d, 0x23, 0x3b,
	0xf1, 0xf7, 0x29, 0xc1, 0x35, 0x0c, 0x4e, 0x86, 0x58, 0xa9, 0xd6, 0x9f, 0x42, 0x5e, 0x6c, 0xd1,
	0x32, 0x14, 0x28, 0x73, 0xc8, 0xc7, 0x88, 0x02, 0xd4, 0x16, 0x21, 0xd5, 0x84, 0x6c, 0x78, 0xa3,
	0xc5, 0xe6, 0xf4, 0x26, 0x1b, 0x90, 0x97, 0xb3, 0x52, 0x86, 0xf9, 0xfd, 0xde, 0x8b, 0xde, 0xee,
	0x41, 0xaf, 0x3a, 0x87, 0x96, 0xe0, 0x4a, 0xab, 0xdd, 0xec, 0x6e, 0xe0, 0x76, 0xcb, 0xdc, 0xdd,
	0xef, 0xef, 0xed, 0xf7, 0xab, 0x19, 0x84, 0x60, 0x31, 0x12, 0x76, 0x7a, 0x42, 0x96, 0x45, 0x1a,
	0x14, 0xd4, 0x32, 0x87, 0x00, 0x8a, 0xa1, 0x6a, 0x5e, 0xff, 0x31, 0x0f, 0x5a, 0x7b, 0x52, 0xf1,
	0xd9, 0xf9, 0x61, 0x0b, 0xaa, 0xae, 0x15, 0x70, 0xf3, 0x98, 0x79, 0x1f, 0x98, 0x19, 0x70, 0x8b,
	0x2b, 0x1e, 0x5a, 0x3c, 0x5b, 0x87, 0x89, 0xe9, 0x86, 0x21, 0x74, 0xf0, 0xa2, 0x40, 0xbd, 0x10,
	0x20, 0xb9, 0x47, 0x5b, 0x29, 0xac, 0x72, 0x77, 0x8a, 0x85, 0x8b, 0x68, 0xe5, 0xcd, 0x74, 0x5a,
	0xf9, 0xef, 0x14, 0x73, 0x7f, 0x45, 0x5e, 0x69, 0x41, 0x41, 0xd5, 0x35, 0x31, 0x23, 0xf3, 0x90,
	0xeb, 0xb5, 0x0f, 0xaa, 0x19, 0x21, 0xc5, 0xfb, 0xbd, 0x5e, 0xa7, 0xf7, 0x4d, 0x35, 0x8b, 0x2a,
	0x50, 0x6a, 0xee, 0xee, 0xec, 0x75, 0xdb, 0xfd, 0xb6, 0x9a, 0x89, 0xad, 0x8d, 0x4e, 0xb7, 0xdd,
	0xaa, 0xe6, 0xf5, 0x5f, 0xb2, 0xb0, 0x10, 0xd5, 0x69, 0x66, 0x7a, 0x7a, 0x9e, 0x42, 0x4f, 0xf7,
	0xd2, 0x6b, 0x7f, 0x19, 0x3f, 0xa1, 0x2f, 0x01, 0x28, 0x1b, 0x8e, 0xb8, 0x19, 0x5d, 0xe8, 0xf2,
	0xfa, 0xad, 0x54, 0xaa, 0x33, 0xb8, 0x3f, 0x52, 0x84, 0x87, 0x35, 0x09, 0x91, 0xf1, 0x7e, 0x0d,
	0x65, 0x6f, 0xc4, 0x23, 0x03, 0x85, 0xd9, 0x0c, 0x80, 0xc2, 0x88, 0xf5, 0x9f, 0xc8, 0x90, 0x9f,
	0xf2, 0x80, 0xce, 0x3b, 0x47, 0x0f, 0xa1, 0x18, 0xd0, 0xc1, 0xd0, 0x55, 0x9f, 0x05, 0xe5, 0x33,
	0xc6, 0xe2, 0xcc, 0xbe, 0x3d, 0x87, 0x43, 0x55, 0xf1, 0x28, 0x8f, 0x98, 0xa0, 0x4f, 0x99, 0xa6,
	0x1a, 0x91, 0x7f, 0x26, 0x80, 0xfb, 0xe2, 0xf8, 0xbc, 0xbb, 0xed, 0x39, 0xac, 0x49, 0xa4, 0xf4,
	0xfd, 0x12, 0x2a, 0x94, 0x71, 0xe2, 0x07, 0xc4, 0x16, 0xed, 0x09, 0xe9, 0x36, 0xf9, 0x1e, 0x77,
	0x62, 0x0a, 0xa9, 0xf6, 0x12, 0x26, 0xd0, 0x13, 0xc8, 0xbb, 0x34, 0xe0, 0x61, 0xef, 0xee, 0x24,
	0x4c, 0x75, 0x69, 0xc0, 0x53, 0x4d, 0x48, 0x88, 0x80, 0x32, 0x8f, 0x4d, 0xba, 0x96, 0x84, 0xf6,
	0x3c, 0x46, 0xd2, 0xa1, 0x02, 0x82, 0x1e, 0x41, 0xce, 0x62, 0xe3, 0x5a, 0x51, 0x22, 0xf5, 0x64,
	0x05, 0xd9, 0x38, 0x15, 0x28, 0x00, 0xe8, 0x19, 0x14, 0xf8, 0x48, 0xd4, 0x7e, 0x3e, 0xa5, 0x84,
	0x7d, 0x71, 0x92, 0x8a, 0x55, 0x20, 0x11, 0xb0, 0x43, 0x6d, 0x5e, 0x2b, 0xa5, 0x04, 0xdc, 0xa2,
	0xf6, 0x94, 0x5c, 0x05, 0x64, 0xb3, 0x08, 0xf9, 0x63, 0xca, 0x1c, 0xfd, 0x5b, 0x58, 0x99, 0xd2,
	0x29, 0xf4, 0x15, 0x80, 0x6d, 0x31, 0x87, 0x3a, 0x16, 0x27, 0x93, 0xc7, 0xe6, 0xf2, 0x51, 0x3e,
	0x85, 0xe8, 0x36, 0xfc, 0xe3, 0xe2, 0xe6, 0xa1, 0x0d, 0x28, 0xdb, 0x1e, 0x0b, 0xb8, 0x6f, 0x51,
	0xc6, 0x67, 0xf6, 0x11, 0xc7, 0xe8, 0x06, 0x2c, 0xa7, 0xb7, 0x15, 0x3d, 0x81, 0x79, 0xe2, 0x92,
	0x01, 0x61, 0x3c, 0x9c, 0xec, 0x4b, 0x0d, 0x4f, 0xf4, 0xf5, 0x1a, 0x2c, 0xa7, 0x37, 0x5c, 0x5f,
	0x81, 0xeb, 0xa9, 0x0d, 0xd5, 0x5f, 0xc1, 0xca, 0x94, 0x7e, 0xa1, 0xa7, 0x50, 0x0a, 0x0d, 0xcf,
	0x9c, 0x62, 0x04, 0xd0, 0x3f, 0x67, 0x61, 0x39, 0xbd, 0x97, 0xc8, 0x48, 0x10, 0x9f, 0xb2, 0xfc,
	0x70, 0x86, 0x21, 0xb8, 0x90, 0x01, 0x1f, 0xc2, 0xb2, 0x98, 0x68, 0x79, 0xb1, 0x4d, 0xe6, 0x71,
	0xd3, 0x27, 0xef, 0x47, 0xd4, 0x27, 0xea, 0x21, 0x2e, 0xe1, 0x25, 0x71, 0x2a, 0xac, 0xf4, 0x3c,
	0x8e, 0xc3, 0x23, 0x64, 0xc0, 0x75, 0xf2, 0x91, 0xfb, 0x56, 0xec, 0x11, 0x54, 0xcc, 0x90, 0x9b,
	0xad, 0xf0, 0x4b, 0x12, 0x7d, 0x1a, 0x96, 0x64, 0xc2, 0xef, 0x66, 0x61, 0xc2, 0xff, 0x27, 0x9f,
	0xa9, 0x4b, 0x3d, 0xc5, 0xf8, 0xf0, 0x1a, 0xa0, 0x2d, 0xeb, 0x98, 0xb4, 0x2c, 0x6e, 0xbd, 0xb5,
	0x02, 0xd2, 0xf4, 0xd8, 0x21, 0x7d, 0xa7, 0x7f, 0x9f, 0x81, 0xa5, 0x9d, 0xb1, 0xf1, 0xb2, 0x9b,
	0x94, 0x8b, 0x97, 0xe7, 0xc8, 0x0b, 0x78, 0xe8, 0x5b, 0xae, 0x85, 0x6c, 0xe8, 0xf9, 0x5c, 0xfa,
	0x5e, 0xc0, 0x72, 0x8d, 0xea, 0x50, 0x72, 0x42, 0x64, 0xf8, 0x17, 0x13, 0xed, 0x85, 0xfe, 0x28,
	0x20, 0xbe, 0xe4, 0x26, 0x0d, 0xcb, 0xb5, 0xd0, 0x1f, 0x5a, 0x41, 0xf0, 0xc1, 0xf3, 0x1d, 0x49,
	0x3c, 0x1a, 0x8e, 0xf6, 0xfa, 0x6f, 0x19, 0xa8, 0x1b, 0xef, 0x5d, 0xca, 0xc9, 0x4e, 0x98, 0x92,
	0xe1, 0x8d, 0x7c, 0x7b, 0x12, 0xd2, 0x6d, 0xa8, 0x1c, 0x52, 0x97, 0x88, 0x47, 0xd0, 0x14, 0x3f,
	0x4d, 0x2a, 0xb4, 0xf2, 0x44, 0xb6, 0xef, 0x53, 0x64, 0xc2, 0x15, 0xdb, 0x63, 0x4c, 0x5d, 0x40,
	0x73, 0xe0, 0x39, 0x93, 0x27, 0xe3, 0x51, 0xa2, 0x50, 0xd3, 0x9d, 0x34, 0x9a, 0x11, 0x7c, 0xc7,
	0x73, 0x08, 0x5e, 0xb4, 0x13, 0x7b, 0xbd, 0x0f, 0x8b, 0x49, 0x8d, 0xe4, 0x17, 0x40, 0x05, 0x4a,
	0xb8, 0xbd, 0xd1, 0xda, 0xed, 0x75, 0xdf, 0x54, 0x33, 0x68, 0x01, 0x34, 0xb1, 0x3b, 0xc0, 0x9d,
	0x7e, 0xbb, 0x9a, 0x45, 0x35, 0xb8, 0x16, 0x6d, 0xcd, 0xdd, 0xbd, 0x76, 0xaf, 0x89, 0xdb, 0x1b,
	0xe2, 0xa3, 0x40, 0xff, 0x35, 0x03, 0xd5, 0x53, 0xb3, 0x61, 0xba, 0x5b, 0xb0, 0x70, 0x68, 0x1d,
	0x13, 0x33, 0x2a, 0x6f, 0xda, 0xad, 0x3e, 0xdf, 0x51, 0xf1, 0x42, 0x1c, 0xc6, 0xa4, 0xe8, 0x31,
	0x14, 0x06, 0xe3, 0xe0, 0xbd, 0x1b, 0x8e, 0xcc, 0x6a, 0x02, 0x9f, 0xd2, 0x7a, 0xc1, 0xb7, 0x12,
	0x80, 0x36, 0xa0, 0x18, 0xc8, 0x4a, 0x85, 0x73, 0xfd, 0xef, 0x19, 0x8b, 0x28, 0x1f, 0x4e, 0x79,
	0xba, 0x59, 0x82, 0xa2, 0xad, 0x06, 0xed, 0xe7, 0x2c, 0xdc, 0x88, 0x94, 0xc5, 0xff, 0xbb, 0x41,
	0xfc, 0x13, 0xe2, 0x87, 0xc9, 0x3e, 0x87, 0xab, 0xb1, 0xc6, 0x29, 0x48, 0x98, 0xf0, 0xcd, 0x84,
	0xd7, 0xb3, 0x65, 0xc2, 0x55, 0xfb, 0x6c, 0xe1, 0x76, 0x01, 0x82, 0xc0, 0x9d, 0x18, 0x51, 0x59,
	0xff, 0x2f, 0x99, 0xf5, 0xb4, 0x38, 0x1a, 0x86, 0xd1, 0x0d, 0xed, 0x6a, 0x41, 0xe0, 0xaa, 0x65,
	0xfd, 0x87, 0x0c, 0x68, 0xd1, 0x01, 0xba, 0x09, 0x10, 0x48, 0x88, 0x79, 0x7a, 0x37, 0x35, 0x25,
	0x79, 0x41, 0xc6, 0xe2, 0x77, 0x2c, 0x3c, 0xb6, 0x49, 0x78, 0x57, 0x34, 0x1c, 0x22, 0x9a, 0xc4,
	0xe7, 0xe8, 0x6f, 0xa0, 0x85, 0x9f, 0xd0, 0xb6, 0x35, 0xb9, 0x32, 0x4a, 0xd0, 0xb4, 0xd0, 0x1d,
	0x58, 0xb0, 0x5d, 0x4a, 0x18, 0x37, 0x4f, 0x88, 0x4f, 0x0f, 0xc7, 0xf2, 0xee, 0x94, 0x70, 0x45,
	0x09, 0x5f, 0x49, 0xd9, 0xbd, 0x67, 0x50, 0x89, 0x7f, 0xf4, 0x9c, 0xfb, 0x08, 0xed, 0xf4, 0xc4,
	0xcf, 0x09, 0x40, 0xb1, 0xb5, 0xbb, 0xbf, 0xd9, 0x15, 0xa3, 0x07, 0x50, 0x34, 0xfa, 0x58, 0x7c,
	0x8f, 0xe6, 0x7e, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x58, 0xd9, 0xd6, 0x59, 0x11, 0x00, 0x00,
}
